{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "std_df = pd.read_csv('student-mat.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 395 entries, 0 to 394\n",
      "Data columns (total 33 columns):\n",
      "school        395 non-null object\n",
      "sex           395 non-null object\n",
      "age           395 non-null int64\n",
      "address       395 non-null object\n",
      "famsize       395 non-null object\n",
      "Pstatus       395 non-null object\n",
      "Medu          395 non-null int64\n",
      "Fedu          395 non-null int64\n",
      "Mjob          395 non-null object\n",
      "Fjob          395 non-null object\n",
      "reason        395 non-null object\n",
      "guardian      395 non-null object\n",
      "traveltime    395 non-null int64\n",
      "studytime     395 non-null int64\n",
      "failures      395 non-null int64\n",
      "schoolsup     395 non-null object\n",
      "famsup        395 non-null object\n",
      "paid          395 non-null object\n",
      "activities    395 non-null object\n",
      "nursery       395 non-null object\n",
      "higher        395 non-null object\n",
      "internet      395 non-null object\n",
      "romantic      395 non-null object\n",
      "famrel        395 non-null int64\n",
      "freetime      395 non-null int64\n",
      "goout         395 non-null int64\n",
      "Dalc          395 non-null int64\n",
      "Walc          395 non-null int64\n",
      "health        395 non-null int64\n",
      "absences      395 non-null int64\n",
      "G1            395 non-null int64\n",
      "G2            395 non-null int64\n",
      "G3            395 non-null int64\n",
      "dtypes: int64(16), object(17)\n",
      "memory usage: 75.6+ KB\n"
     ]
    }
   ],
   "source": [
    "std_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>school</th>\n",
       "      <th>sex</th>\n",
       "      <th>age</th>\n",
       "      <th>address</th>\n",
       "      <th>famsize</th>\n",
       "      <th>Pstatus</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>Mjob</th>\n",
       "      <th>Fjob</th>\n",
       "      <th>...</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>18</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>A</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>at_home</td>\n",
       "      <td>teacher</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>17</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>at_home</td>\n",
       "      <td>other</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>15</td>\n",
       "      <td>U</td>\n",
       "      <td>LE3</td>\n",
       "      <td>T</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>at_home</td>\n",
       "      <td>other</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>15</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>health</td>\n",
       "      <td>services</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>16</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>other</td>\n",
       "      <td>other</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  school sex  age address famsize Pstatus  Medu  Fedu     Mjob      Fjob ...  \\\n",
       "0     GP   F   18       U     GT3       A     4     4  at_home   teacher ...   \n",
       "1     GP   F   17       U     GT3       T     1     1  at_home     other ...   \n",
       "2     GP   F   15       U     LE3       T     1     1  at_home     other ...   \n",
       "3     GP   F   15       U     GT3       T     4     2   health  services ...   \n",
       "4     GP   F   16       U     GT3       T     3     3    other     other ...   \n",
       "\n",
       "  famrel freetime  goout  Dalc  Walc health absences  G1  G2  G3  \n",
       "0      4        3      4     1     1      3        6   5   6   6  \n",
       "1      5        3      3     1     1      3        4   5   5   6  \n",
       "2      4        3      2     2     3      3       10   7   8  10  \n",
       "3      3        2      2     1     1      5        2  15  14  15  \n",
       "4      4        3      2     1     2      5        4   6  10  10  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(395, 33)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.options.display.max_rows = 45\n",
    "pd.options.display.max_columns = 40"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>school</th>\n",
       "      <th>sex</th>\n",
       "      <th>age</th>\n",
       "      <th>address</th>\n",
       "      <th>famsize</th>\n",
       "      <th>Pstatus</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>Mjob</th>\n",
       "      <th>Fjob</th>\n",
       "      <th>reason</th>\n",
       "      <th>guardian</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>schoolsup</th>\n",
       "      <th>famsup</th>\n",
       "      <th>paid</th>\n",
       "      <th>activities</th>\n",
       "      <th>nursery</th>\n",
       "      <th>higher</th>\n",
       "      <th>internet</th>\n",
       "      <th>romantic</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>18</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>A</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>at_home</td>\n",
       "      <td>teacher</td>\n",
       "      <td>course</td>\n",
       "      <td>mother</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>17</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>at_home</td>\n",
       "      <td>other</td>\n",
       "      <td>course</td>\n",
       "      <td>father</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>15</td>\n",
       "      <td>U</td>\n",
       "      <td>LE3</td>\n",
       "      <td>T</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>at_home</td>\n",
       "      <td>other</td>\n",
       "      <td>other</td>\n",
       "      <td>mother</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>15</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>health</td>\n",
       "      <td>services</td>\n",
       "      <td>home</td>\n",
       "      <td>mother</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>16</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>other</td>\n",
       "      <td>other</td>\n",
       "      <td>home</td>\n",
       "      <td>father</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  school sex  age address famsize Pstatus  Medu  Fedu     Mjob      Fjob  \\\n",
       "0     GP   F   18       U     GT3       A     4     4  at_home   teacher   \n",
       "1     GP   F   17       U     GT3       T     1     1  at_home     other   \n",
       "2     GP   F   15       U     LE3       T     1     1  at_home     other   \n",
       "3     GP   F   15       U     GT3       T     4     2   health  services   \n",
       "4     GP   F   16       U     GT3       T     3     3    other     other   \n",
       "\n",
       "   reason guardian  traveltime  studytime  failures schoolsup famsup paid  \\\n",
       "0  course   mother           2          2         0       yes     no   no   \n",
       "1  course   father           1          2         0        no    yes   no   \n",
       "2   other   mother           1          2         3       yes     no  yes   \n",
       "3    home   mother           1          3         0        no    yes  yes   \n",
       "4    home   father           1          2         0        no    yes  yes   \n",
       "\n",
       "  activities nursery higher internet romantic  famrel  freetime  goout  Dalc  \\\n",
       "0         no     yes    yes       no       no       4         3      4     1   \n",
       "1         no      no    yes      yes       no       5         3      3     1   \n",
       "2         no     yes    yes      yes       no       4         3      2     2   \n",
       "3        yes     yes    yes      yes      yes       3         2      2     1   \n",
       "4         no     yes    yes       no       no       4         3      2     1   \n",
       "\n",
       "   Walc  health  absences  G1  G2  G3  \n",
       "0     1       3         6   5   6   6  \n",
       "1     1       3         4   5   5   6  \n",
       "2     3       3        10   7   8  10  \n",
       "3     1       5         2  15  14  15  \n",
       "4     2       5         4   6  10  10  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Value count for school\n",
      "GP    349\n",
      "MS     46\n",
      "Name: school, dtype: int64\n",
      "------------------------\n",
      "Value count for sex\n",
      "F    208\n",
      "M    187\n",
      "Name: sex, dtype: int64\n",
      "------------------------\n",
      "Value count for age\n",
      "16    104\n",
      "17     98\n",
      "18     82\n",
      "15     82\n",
      "19     24\n",
      "20      3\n",
      "22      1\n",
      "21      1\n",
      "Name: age, dtype: int64\n",
      "------------------------\n",
      "Value count for address\n",
      "U    307\n",
      "R     88\n",
      "Name: address, dtype: int64\n",
      "------------------------\n",
      "Value count for famsize\n",
      "GT3    281\n",
      "LE3    114\n",
      "Name: famsize, dtype: int64\n",
      "------------------------\n",
      "Value count for Pstatus\n",
      "T    354\n",
      "A     41\n",
      "Name: Pstatus, dtype: int64\n",
      "------------------------\n",
      "Value count for Medu\n",
      "4    131\n",
      "2    103\n",
      "3     99\n",
      "1     59\n",
      "0      3\n",
      "Name: Medu, dtype: int64\n",
      "------------------------\n",
      "Value count for Fedu\n",
      "2    115\n",
      "3    100\n",
      "4     96\n",
      "1     82\n",
      "0      2\n",
      "Name: Fedu, dtype: int64\n",
      "------------------------\n",
      "Value count for Mjob\n",
      "other       141\n",
      "services    103\n",
      "at_home      59\n",
      "teacher      58\n",
      "health       34\n",
      "Name: Mjob, dtype: int64\n",
      "------------------------\n",
      "Value count for Fjob\n",
      "other       217\n",
      "services    111\n",
      "teacher      29\n",
      "at_home      20\n",
      "health       18\n",
      "Name: Fjob, dtype: int64\n",
      "------------------------\n",
      "Value count for reason\n",
      "course        145\n",
      "home          109\n",
      "reputation    105\n",
      "other          36\n",
      "Name: reason, dtype: int64\n",
      "------------------------\n",
      "Value count for guardian\n",
      "mother    273\n",
      "father     90\n",
      "other      32\n",
      "Name: guardian, dtype: int64\n",
      "------------------------\n",
      "Value count for traveltime\n",
      "1    257\n",
      "2    107\n",
      "3     23\n",
      "4      8\n",
      "Name: traveltime, dtype: int64\n",
      "------------------------\n",
      "Value count for studytime\n",
      "2    198\n",
      "1    105\n",
      "3     65\n",
      "4     27\n",
      "Name: studytime, dtype: int64\n",
      "------------------------\n",
      "Value count for failures\n",
      "0    312\n",
      "1     50\n",
      "2     17\n",
      "3     16\n",
      "Name: failures, dtype: int64\n",
      "------------------------\n",
      "Value count for schoolsup\n",
      "no     344\n",
      "yes     51\n",
      "Name: schoolsup, dtype: int64\n",
      "------------------------\n",
      "Value count for famsup\n",
      "yes    242\n",
      "no     153\n",
      "Name: famsup, dtype: int64\n",
      "------------------------\n",
      "Value count for paid\n",
      "no     214\n",
      "yes    181\n",
      "Name: paid, dtype: int64\n",
      "------------------------\n",
      "Value count for activities\n",
      "yes    201\n",
      "no     194\n",
      "Name: activities, dtype: int64\n",
      "------------------------\n",
      "Value count for nursery\n",
      "yes    314\n",
      "no      81\n",
      "Name: nursery, dtype: int64\n",
      "------------------------\n",
      "Value count for higher\n",
      "yes    375\n",
      "no      20\n",
      "Name: higher, dtype: int64\n",
      "------------------------\n",
      "Value count for internet\n",
      "yes    329\n",
      "no      66\n",
      "Name: internet, dtype: int64\n",
      "------------------------\n",
      "Value count for romantic\n",
      "no     263\n",
      "yes    132\n",
      "Name: romantic, dtype: int64\n",
      "------------------------\n",
      "Value count for famrel\n",
      "4    195\n",
      "5    106\n",
      "3     68\n",
      "2     18\n",
      "1      8\n",
      "Name: famrel, dtype: int64\n",
      "------------------------\n",
      "Value count for freetime\n",
      "3    157\n",
      "4    115\n",
      "2     64\n",
      "5     40\n",
      "1     19\n",
      "Name: freetime, dtype: int64\n",
      "------------------------\n",
      "Value count for goout\n",
      "3    130\n",
      "2    103\n",
      "4     86\n",
      "5     53\n",
      "1     23\n",
      "Name: goout, dtype: int64\n",
      "------------------------\n",
      "Value count for Dalc\n",
      "1    276\n",
      "2     75\n",
      "3     26\n",
      "5      9\n",
      "4      9\n",
      "Name: Dalc, dtype: int64\n",
      "------------------------\n",
      "Value count for Walc\n",
      "1    151\n",
      "2     85\n",
      "3     80\n",
      "4     51\n",
      "5     28\n",
      "Name: Walc, dtype: int64\n",
      "------------------------\n",
      "Value count for health\n",
      "5    146\n",
      "3     91\n",
      "4     66\n",
      "1     47\n",
      "2     45\n",
      "Name: health, dtype: int64\n",
      "------------------------\n",
      "Value count for absences\n",
      "0     115\n",
      "2      65\n",
      "4      53\n",
      "6      31\n",
      "8      22\n",
      "10     17\n",
      "14     12\n",
      "12     12\n",
      "3       8\n",
      "7       7\n",
      "16      7\n",
      "18      5\n",
      "5       5\n",
      "20      4\n",
      "22      3\n",
      "13      3\n",
      "1       3\n",
      "9       3\n",
      "11      3\n",
      "15      3\n",
      "23      1\n",
      "24      1\n",
      "21      1\n",
      "25      1\n",
      "56      1\n",
      "26      1\n",
      "28      1\n",
      "30      1\n",
      "17      1\n",
      "38      1\n",
      "40      1\n",
      "54      1\n",
      "19      1\n",
      "75      1\n",
      "Name: absences, dtype: int64\n",
      "------------------------\n",
      "Value count for G1\n",
      "10    51\n",
      "8     41\n",
      "11    39\n",
      "7     37\n",
      "12    35\n",
      "13    33\n",
      "9     31\n",
      "14    30\n",
      "15    24\n",
      "6     24\n",
      "16    22\n",
      "17     8\n",
      "18     8\n",
      "5      7\n",
      "19     3\n",
      "4      1\n",
      "3      1\n",
      "Name: G1, dtype: int64\n",
      "------------------------\n",
      "Value count for G2\n",
      "9     50\n",
      "10    46\n",
      "12    41\n",
      "13    37\n",
      "11    35\n",
      "15    34\n",
      "8     32\n",
      "14    23\n",
      "7     21\n",
      "5     15\n",
      "6     14\n",
      "0     13\n",
      "16    13\n",
      "18    12\n",
      "17     5\n",
      "19     3\n",
      "4      1\n",
      "Name: G2, dtype: int64\n",
      "------------------------\n",
      "Value count for G3\n",
      "10    56\n",
      "11    47\n",
      "0     38\n",
      "15    33\n",
      "8     32\n",
      "13    31\n",
      "12    31\n",
      "9     28\n",
      "14    27\n",
      "16    16\n",
      "6     15\n",
      "18    12\n",
      "7      9\n",
      "5      7\n",
      "17     6\n",
      "19     5\n",
      "4      1\n",
      "20     1\n",
      "Name: G3, dtype: int64\n",
      "------------------------\n"
     ]
    }
   ],
   "source": [
    "for sample in std_df.columns:\n",
    "    print('Value count for', sample)\n",
    "    print(std_df[sample].value_counts())\n",
    "    print('------------------------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>school</th>\n",
       "      <th>sex</th>\n",
       "      <th>age</th>\n",
       "      <th>address</th>\n",
       "      <th>famsize</th>\n",
       "      <th>Pstatus</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>Mjob</th>\n",
       "      <th>Fjob</th>\n",
       "      <th>reason</th>\n",
       "      <th>guardian</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>schoolsup</th>\n",
       "      <th>famsup</th>\n",
       "      <th>paid</th>\n",
       "      <th>activities</th>\n",
       "      <th>nursery</th>\n",
       "      <th>higher</th>\n",
       "      <th>internet</th>\n",
       "      <th>romantic</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>GP</td>\n",
       "      <td>F</td>\n",
       "      <td>17</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>other</td>\n",
       "      <td>other</td>\n",
       "      <td>reputation</td>\n",
       "      <td>mother</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    school sex  age address famsize Pstatus  Medu  Fedu   Mjob   Fjob  \\\n",
       "216     GP   F   17       U     GT3       T     4     3  other  other   \n",
       "\n",
       "         reason guardian  traveltime  studytime  failures schoolsup famsup  \\\n",
       "216  reputation   mother           1          2         2        no     no   \n",
       "\n",
       "    paid activities nursery higher internet romantic  famrel  freetime  goout  \\\n",
       "216  yes         no     yes    yes      yes      yes       3         4      5   \n",
       "\n",
       "     Dalc  Walc  health  absences  G1  G2  G3  \n",
       "216     2     4       1        22   6   6   4  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df[std_df['G3'] == 4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>school</th>\n",
       "      <th>sex</th>\n",
       "      <th>age</th>\n",
       "      <th>address</th>\n",
       "      <th>famsize</th>\n",
       "      <th>Pstatus</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>Mjob</th>\n",
       "      <th>Fjob</th>\n",
       "      <th>reason</th>\n",
       "      <th>guardian</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>schoolsup</th>\n",
       "      <th>famsup</th>\n",
       "      <th>paid</th>\n",
       "      <th>activities</th>\n",
       "      <th>nursery</th>\n",
       "      <th>higher</th>\n",
       "      <th>internet</th>\n",
       "      <th>romantic</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>GP</td>\n",
       "      <td>M</td>\n",
       "      <td>16</td>\n",
       "      <td>U</td>\n",
       "      <td>GT3</td>\n",
       "      <td>T</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>health</td>\n",
       "      <td>services</td>\n",
       "      <td>reputation</td>\n",
       "      <td>mother</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   school sex  age address famsize Pstatus  Medu  Fedu    Mjob      Fjob  \\\n",
       "47     GP   M   16       U     GT3       T     4     3  health  services   \n",
       "\n",
       "        reason guardian  traveltime  studytime  failures schoolsup famsup  \\\n",
       "47  reputation   mother           1          4         0        no     no   \n",
       "\n",
       "   paid activities nursery higher internet romantic  famrel  freetime  goout  \\\n",
       "47   no        yes     yes    yes      yes       no       4         2      2   \n",
       "\n",
       "    Dalc  Walc  health  absences  G1  G2  G3  \n",
       "47     1     1       2         4  19  19  20  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df[std_df['G3'] == 20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "std_df.drop([47,216],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "      <td>393.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>16.697201</td>\n",
       "      <td>2.743003</td>\n",
       "      <td>2.519084</td>\n",
       "      <td>1.450382</td>\n",
       "      <td>2.030534</td>\n",
       "      <td>0.330789</td>\n",
       "      <td>3.946565</td>\n",
       "      <td>3.236641</td>\n",
       "      <td>3.106870</td>\n",
       "      <td>1.480916</td>\n",
       "      <td>2.290076</td>\n",
       "      <td>3.564885</td>\n",
       "      <td>5.671756</td>\n",
       "      <td>10.900763</td>\n",
       "      <td>10.704835</td>\n",
       "      <td>10.407125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.278718</td>\n",
       "      <td>1.093864</td>\n",
       "      <td>1.090435</td>\n",
       "      <td>0.698545</td>\n",
       "      <td>0.835491</td>\n",
       "      <td>0.740583</td>\n",
       "      <td>0.897670</td>\n",
       "      <td>0.998714</td>\n",
       "      <td>1.110607</td>\n",
       "      <td>0.892295</td>\n",
       "      <td>1.286638</td>\n",
       "      <td>1.385600</td>\n",
       "      <td>7.980630</td>\n",
       "      <td>3.293132</td>\n",
       "      <td>3.740212</td>\n",
       "      <td>4.556018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>15.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>16.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>17.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>11.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>14.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>22.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>19.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              age        Medu        Fedu  traveltime   studytime    failures  \\\n",
       "count  393.000000  393.000000  393.000000  393.000000  393.000000  393.000000   \n",
       "mean    16.697201    2.743003    2.519084    1.450382    2.030534    0.330789   \n",
       "std      1.278718    1.093864    1.090435    0.698545    0.835491    0.740583   \n",
       "min     15.000000    0.000000    0.000000    1.000000    1.000000    0.000000   \n",
       "25%     16.000000    2.000000    2.000000    1.000000    1.000000    0.000000   \n",
       "50%     17.000000    3.000000    2.000000    1.000000    2.000000    0.000000   \n",
       "75%     18.000000    4.000000    3.000000    2.000000    2.000000    0.000000   \n",
       "max     22.000000    4.000000    4.000000    4.000000    4.000000    3.000000   \n",
       "\n",
       "           famrel    freetime       goout        Dalc        Walc      health  \\\n",
       "count  393.000000  393.000000  393.000000  393.000000  393.000000  393.000000   \n",
       "mean     3.946565    3.236641    3.106870    1.480916    2.290076    3.564885   \n",
       "std      0.897670    0.998714    1.110607    0.892295    1.286638    1.385600   \n",
       "min      1.000000    1.000000    1.000000    1.000000    1.000000    1.000000   \n",
       "25%      4.000000    3.000000    2.000000    1.000000    1.000000    3.000000   \n",
       "50%      4.000000    3.000000    3.000000    1.000000    2.000000    4.000000   \n",
       "75%      5.000000    4.000000    4.000000    2.000000    3.000000    5.000000   \n",
       "max      5.000000    5.000000    5.000000    5.000000    5.000000    5.000000   \n",
       "\n",
       "         absences          G1          G2          G3  \n",
       "count  393.000000  393.000000  393.000000  393.000000  \n",
       "mean     5.671756   10.900763   10.704835   10.407125  \n",
       "std      7.980630    3.293132    3.740212    4.556018  \n",
       "min      0.000000    3.000000    0.000000    0.000000  \n",
       "25%      0.000000    8.000000    9.000000    8.000000  \n",
       "50%      4.000000   11.000000   11.000000   11.000000  \n",
       "75%      8.000000   13.000000   13.000000   14.000000  \n",
       "max     75.000000   19.000000   19.000000   19.000000  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.163380</td>\n",
       "      <td>-0.163247</td>\n",
       "      <td>0.070242</td>\n",
       "      <td>-0.000875</td>\n",
       "      <td>0.243422</td>\n",
       "      <td>0.054763</td>\n",
       "      <td>0.014303</td>\n",
       "      <td>0.125234</td>\n",
       "      <td>0.130188</td>\n",
       "      <td>0.115545</td>\n",
       "      <td>-0.063032</td>\n",
       "      <td>0.174719</td>\n",
       "      <td>-0.060464</td>\n",
       "      <td>-0.140881</td>\n",
       "      <td>-0.159192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Medu</th>\n",
       "      <td>-0.163380</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.623277</td>\n",
       "      <td>-0.168634</td>\n",
       "      <td>0.058852</td>\n",
       "      <td>-0.244334</td>\n",
       "      <td>-0.001031</td>\n",
       "      <td>0.032460</td>\n",
       "      <td>0.062563</td>\n",
       "      <td>0.019792</td>\n",
       "      <td>-0.048400</td>\n",
       "      <td>-0.038622</td>\n",
       "      <td>0.095804</td>\n",
       "      <td>0.205355</td>\n",
       "      <td>0.215234</td>\n",
       "      <td>0.217609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fedu</th>\n",
       "      <td>-0.163247</td>\n",
       "      <td>0.623277</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.156996</td>\n",
       "      <td>-0.011842</td>\n",
       "      <td>-0.254234</td>\n",
       "      <td>-0.000259</td>\n",
       "      <td>-0.012356</td>\n",
       "      <td>0.042547</td>\n",
       "      <td>0.002342</td>\n",
       "      <td>-0.013047</td>\n",
       "      <td>0.018173</td>\n",
       "      <td>0.022561</td>\n",
       "      <td>0.191272</td>\n",
       "      <td>0.165262</td>\n",
       "      <td>0.152991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>traveltime</th>\n",
       "      <td>0.070242</td>\n",
       "      <td>-0.168634</td>\n",
       "      <td>-0.156996</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.097930</td>\n",
       "      <td>0.095912</td>\n",
       "      <td>-0.018478</td>\n",
       "      <td>-0.017864</td>\n",
       "      <td>0.029870</td>\n",
       "      <td>0.138652</td>\n",
       "      <td>0.135265</td>\n",
       "      <td>0.002676</td>\n",
       "      <td>-0.010022</td>\n",
       "      <td>-0.092525</td>\n",
       "      <td>-0.153055</td>\n",
       "      <td>-0.117076</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>studytime</th>\n",
       "      <td>-0.000875</td>\n",
       "      <td>0.058852</td>\n",
       "      <td>-0.011842</td>\n",
       "      <td>-0.097930</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.173034</td>\n",
       "      <td>0.039596</td>\n",
       "      <td>-0.137086</td>\n",
       "      <td>-0.058510</td>\n",
       "      <td>-0.194263</td>\n",
       "      <td>-0.250317</td>\n",
       "      <td>-0.070028</td>\n",
       "      <td>-0.062003</td>\n",
       "      <td>0.148525</td>\n",
       "      <td>0.124528</td>\n",
       "      <td>0.086529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>failures</th>\n",
       "      <td>0.243422</td>\n",
       "      <td>-0.244334</td>\n",
       "      <td>-0.254234</td>\n",
       "      <td>0.095912</td>\n",
       "      <td>-0.173034</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.038578</td>\n",
       "      <td>0.087042</td>\n",
       "      <td>0.115089</td>\n",
       "      <td>0.133110</td>\n",
       "      <td>0.134638</td>\n",
       "      <td>0.075985</td>\n",
       "      <td>0.052516</td>\n",
       "      <td>-0.349467</td>\n",
       "      <td>-0.351467</td>\n",
       "      <td>-0.355291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>famrel</th>\n",
       "      <td>0.054763</td>\n",
       "      <td>-0.001031</td>\n",
       "      <td>-0.000259</td>\n",
       "      <td>-0.018478</td>\n",
       "      <td>0.039596</td>\n",
       "      <td>-0.038578</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.153569</td>\n",
       "      <td>0.069713</td>\n",
       "      <td>-0.076120</td>\n",
       "      <td>-0.110234</td>\n",
       "      <td>0.089961</td>\n",
       "      <td>-0.039132</td>\n",
       "      <td>0.018050</td>\n",
       "      <td>-0.022185</td>\n",
       "      <td>0.047748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freetime</th>\n",
       "      <td>0.014303</td>\n",
       "      <td>0.032460</td>\n",
       "      <td>-0.012356</td>\n",
       "      <td>-0.017864</td>\n",
       "      <td>-0.137086</td>\n",
       "      <td>0.087042</td>\n",
       "      <td>0.153569</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.280731</td>\n",
       "      <td>0.206896</td>\n",
       "      <td>0.142984</td>\n",
       "      <td>0.076441</td>\n",
       "      <td>-0.063204</td>\n",
       "      <td>0.023447</td>\n",
       "      <td>-0.004473</td>\n",
       "      <td>0.020821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>goout</th>\n",
       "      <td>0.125234</td>\n",
       "      <td>0.062563</td>\n",
       "      <td>0.042547</td>\n",
       "      <td>0.029870</td>\n",
       "      <td>-0.058510</td>\n",
       "      <td>0.115089</td>\n",
       "      <td>0.069713</td>\n",
       "      <td>0.280731</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.264633</td>\n",
       "      <td>0.415634</td>\n",
       "      <td>-0.004518</td>\n",
       "      <td>0.035340</td>\n",
       "      <td>-0.138685</td>\n",
       "      <td>-0.153288</td>\n",
       "      <td>-0.123065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dalc</th>\n",
       "      <td>0.130188</td>\n",
       "      <td>0.019792</td>\n",
       "      <td>0.002342</td>\n",
       "      <td>0.138652</td>\n",
       "      <td>-0.194263</td>\n",
       "      <td>0.133110</td>\n",
       "      <td>-0.076120</td>\n",
       "      <td>0.206896</td>\n",
       "      <td>0.264633</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.646999</td>\n",
       "      <td>0.078895</td>\n",
       "      <td>0.109275</td>\n",
       "      <td>-0.089632</td>\n",
       "      <td>-0.059785</td>\n",
       "      <td>-0.050167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Walc</th>\n",
       "      <td>0.115545</td>\n",
       "      <td>-0.048400</td>\n",
       "      <td>-0.013047</td>\n",
       "      <td>0.135265</td>\n",
       "      <td>-0.250317</td>\n",
       "      <td>0.134638</td>\n",
       "      <td>-0.110234</td>\n",
       "      <td>0.142984</td>\n",
       "      <td>0.415634</td>\n",
       "      <td>0.646999</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.096736</td>\n",
       "      <td>0.130038</td>\n",
       "      <td>-0.116614</td>\n",
       "      <td>-0.075991</td>\n",
       "      <td>-0.042392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>health</th>\n",
       "      <td>-0.063032</td>\n",
       "      <td>-0.038622</td>\n",
       "      <td>0.018173</td>\n",
       "      <td>0.002676</td>\n",
       "      <td>-0.070028</td>\n",
       "      <td>0.075985</td>\n",
       "      <td>0.089961</td>\n",
       "      <td>0.076441</td>\n",
       "      <td>-0.004518</td>\n",
       "      <td>0.078895</td>\n",
       "      <td>0.096736</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.021254</td>\n",
       "      <td>-0.074339</td>\n",
       "      <td>-0.098682</td>\n",
       "      <td>-0.062790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>absences</th>\n",
       "      <td>0.174719</td>\n",
       "      <td>0.095804</td>\n",
       "      <td>0.022561</td>\n",
       "      <td>-0.010022</td>\n",
       "      <td>-0.062003</td>\n",
       "      <td>0.052516</td>\n",
       "      <td>-0.039132</td>\n",
       "      <td>-0.063204</td>\n",
       "      <td>0.035340</td>\n",
       "      <td>0.109275</td>\n",
       "      <td>0.130038</td>\n",
       "      <td>-0.021254</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.022403</td>\n",
       "      <td>-0.024449</td>\n",
       "      <td>0.043185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>G1</th>\n",
       "      <td>-0.060464</td>\n",
       "      <td>0.205355</td>\n",
       "      <td>0.191272</td>\n",
       "      <td>-0.092525</td>\n",
       "      <td>0.148525</td>\n",
       "      <td>-0.349467</td>\n",
       "      <td>0.018050</td>\n",
       "      <td>0.023447</td>\n",
       "      <td>-0.138685</td>\n",
       "      <td>-0.089632</td>\n",
       "      <td>-0.116614</td>\n",
       "      <td>-0.074339</td>\n",
       "      <td>-0.022403</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.849474</td>\n",
       "      <td>0.797919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>G2</th>\n",
       "      <td>-0.140881</td>\n",
       "      <td>0.215234</td>\n",
       "      <td>0.165262</td>\n",
       "      <td>-0.153055</td>\n",
       "      <td>0.124528</td>\n",
       "      <td>-0.351467</td>\n",
       "      <td>-0.022185</td>\n",
       "      <td>-0.004473</td>\n",
       "      <td>-0.153288</td>\n",
       "      <td>-0.059785</td>\n",
       "      <td>-0.075991</td>\n",
       "      <td>-0.098682</td>\n",
       "      <td>-0.024449</td>\n",
       "      <td>0.849474</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.903346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>G3</th>\n",
       "      <td>-0.159192</td>\n",
       "      <td>0.217609</td>\n",
       "      <td>0.152991</td>\n",
       "      <td>-0.117076</td>\n",
       "      <td>0.086529</td>\n",
       "      <td>-0.355291</td>\n",
       "      <td>0.047748</td>\n",
       "      <td>0.020821</td>\n",
       "      <td>-0.123065</td>\n",
       "      <td>-0.050167</td>\n",
       "      <td>-0.042392</td>\n",
       "      <td>-0.062790</td>\n",
       "      <td>0.043185</td>\n",
       "      <td>0.797919</td>\n",
       "      <td>0.903346</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 age      Medu      Fedu  traveltime  studytime  failures  \\\n",
       "age         1.000000 -0.163380 -0.163247    0.070242  -0.000875  0.243422   \n",
       "Medu       -0.163380  1.000000  0.623277   -0.168634   0.058852 -0.244334   \n",
       "Fedu       -0.163247  0.623277  1.000000   -0.156996  -0.011842 -0.254234   \n",
       "traveltime  0.070242 -0.168634 -0.156996    1.000000  -0.097930  0.095912   \n",
       "studytime  -0.000875  0.058852 -0.011842   -0.097930   1.000000 -0.173034   \n",
       "failures    0.243422 -0.244334 -0.254234    0.095912  -0.173034  1.000000   \n",
       "famrel      0.054763 -0.001031 -0.000259   -0.018478   0.039596 -0.038578   \n",
       "freetime    0.014303  0.032460 -0.012356   -0.017864  -0.137086  0.087042   \n",
       "goout       0.125234  0.062563  0.042547    0.029870  -0.058510  0.115089   \n",
       "Dalc        0.130188  0.019792  0.002342    0.138652  -0.194263  0.133110   \n",
       "Walc        0.115545 -0.048400 -0.013047    0.135265  -0.250317  0.134638   \n",
       "health     -0.063032 -0.038622  0.018173    0.002676  -0.070028  0.075985   \n",
       "absences    0.174719  0.095804  0.022561   -0.010022  -0.062003  0.052516   \n",
       "G1         -0.060464  0.205355  0.191272   -0.092525   0.148525 -0.349467   \n",
       "G2         -0.140881  0.215234  0.165262   -0.153055   0.124528 -0.351467   \n",
       "G3         -0.159192  0.217609  0.152991   -0.117076   0.086529 -0.355291   \n",
       "\n",
       "              famrel  freetime     goout      Dalc      Walc    health  \\\n",
       "age         0.054763  0.014303  0.125234  0.130188  0.115545 -0.063032   \n",
       "Medu       -0.001031  0.032460  0.062563  0.019792 -0.048400 -0.038622   \n",
       "Fedu       -0.000259 -0.012356  0.042547  0.002342 -0.013047  0.018173   \n",
       "traveltime -0.018478 -0.017864  0.029870  0.138652  0.135265  0.002676   \n",
       "studytime   0.039596 -0.137086 -0.058510 -0.194263 -0.250317 -0.070028   \n",
       "failures   -0.038578  0.087042  0.115089  0.133110  0.134638  0.075985   \n",
       "famrel      1.000000  0.153569  0.069713 -0.076120 -0.110234  0.089961   \n",
       "freetime    0.153569  1.000000  0.280731  0.206896  0.142984  0.076441   \n",
       "goout       0.069713  0.280731  1.000000  0.264633  0.415634 -0.004518   \n",
       "Dalc       -0.076120  0.206896  0.264633  1.000000  0.646999  0.078895   \n",
       "Walc       -0.110234  0.142984  0.415634  0.646999  1.000000  0.096736   \n",
       "health      0.089961  0.076441 -0.004518  0.078895  0.096736  1.000000   \n",
       "absences   -0.039132 -0.063204  0.035340  0.109275  0.130038 -0.021254   \n",
       "G1          0.018050  0.023447 -0.138685 -0.089632 -0.116614 -0.074339   \n",
       "G2         -0.022185 -0.004473 -0.153288 -0.059785 -0.075991 -0.098682   \n",
       "G3          0.047748  0.020821 -0.123065 -0.050167 -0.042392 -0.062790   \n",
       "\n",
       "            absences        G1        G2        G3  \n",
       "age         0.174719 -0.060464 -0.140881 -0.159192  \n",
       "Medu        0.095804  0.205355  0.215234  0.217609  \n",
       "Fedu        0.022561  0.191272  0.165262  0.152991  \n",
       "traveltime -0.010022 -0.092525 -0.153055 -0.117076  \n",
       "studytime  -0.062003  0.148525  0.124528  0.086529  \n",
       "failures    0.052516 -0.349467 -0.351467 -0.355291  \n",
       "famrel     -0.039132  0.018050 -0.022185  0.047748  \n",
       "freetime   -0.063204  0.023447 -0.004473  0.020821  \n",
       "goout       0.035340 -0.138685 -0.153288 -0.123065  \n",
       "Dalc        0.109275 -0.089632 -0.059785 -0.050167  \n",
       "Walc        0.130038 -0.116614 -0.075991 -0.042392  \n",
       "health     -0.021254 -0.074339 -0.098682 -0.062790  \n",
       "absences    1.000000 -0.022403 -0.024449  0.043185  \n",
       "G1         -0.022403  1.000000  0.849474  0.797919  \n",
       "G2         -0.024449  0.849474  1.000000  0.903346  \n",
       "G3          0.043185  0.797919  0.903346  1.000000  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df_corr = std_df.corr()\n",
    "std_df_corr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "school        0\n",
       "sex           0\n",
       "age           0\n",
       "address       0\n",
       "famsize       0\n",
       "Pstatus       0\n",
       "Medu          0\n",
       "Fedu          0\n",
       "Mjob          0\n",
       "Fjob          0\n",
       "reason        0\n",
       "guardian      0\n",
       "traveltime    0\n",
       "studytime     0\n",
       "failures      0\n",
       "schoolsup     0\n",
       "famsup        0\n",
       "paid          0\n",
       "activities    0\n",
       "nursery       0\n",
       "higher        0\n",
       "internet      0\n",
       "romantic      0\n",
       "famrel        0\n",
       "freetime      0\n",
       "goout         0\n",
       "Dalc          0\n",
       "Walc          0\n",
       "health        0\n",
       "absences      0\n",
       "G1            0\n",
       "G2            0\n",
       "G3            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "std_df_numeric_cols = std_df.select_dtypes(include = np.number)\n",
    "std_df_string_cols = std_df.select_dtypes(include = 'object')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "std_df_numeric_cols_list = std_df_numeric_cols.columns\n",
    "std_df_string_cols_list = std_df_string_cols.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set_style(style='whitegrid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX4AAAEVCAYAAADn6Y5lAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAEpJJREFUeJzt3XuwXWV5x/FvwsVUjNxElAGa4uXhCArkqElRIRaRQdrioB3BAUUHrRUVpBQtglzG2qKCciuikKJUxgsRL2OjsRYwcilxA/V25uEmxFZuUoEQQBpy+sdeGTYn58Qdd9ZaO+f9fv45a71rrb2fzLzz22/edZsxPj6OJKkcM9suQJLULINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr+0AUTEzRGx1STtx0fEJS2UJE1p07YLkKaDzNyz7Rqkfhn80gQRsQA4A7gL2BV4DDgSeBI4H5gNPB+4GXhLZj4eEePAdsBDwDnA/sB9wL1VmzQ0nOqRJvdy4NzMfBnwL8ClwLuAL2TmfOCFwJ8AB0047r3Ai4GX0A3/nRurWOqTwS9N7r8yc2m1vBDYC/gn4P6IOAG4ANgBeNaE414HXJaZT2TmSuBLTRUs9cupHmlyq3qWZ1R/LwMeAb4KfIfuaH4Ga+ttWzXJdqlVjvilye0ZES+rlt8NXAvMA07PzK9U7fOATSYctxh4W0TMiohZwFsaqVZaD474pcndA/xDRMyhe5L2COANwBURsZLuCdur6c7197qwavsZ8ABwa1MFS/2a4WOZpaerruo5LzN3b7sWqQ5O9UhSYRzxS1JhHPFLUmEMfkkqzNBf1dPpdJyLkqQ/wOjo6GT3mQx/8AOMjo62XYIkbVQ6nc6U25zqkaTCGPySVBiDX5IKY/BLUmEMfkkqjMEvSYUx+CWpMAa/JBXG4JekwmwUd+4OavTvvth2CRpCnU++re0SpFY44pekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMLUcuduRGwGLATmAM8APgb8ArgEGAd+Bhydmasj4hTgIGAVcGxm3lBHTZKkrrpG/IcDD2Tma4ADgfOAs4CTqrYZwMERMRfYF5gHHAqcX1M9kqRKXc/q+Rpwec/6KmAUuLpaXwy8HkhgSWaOA8sjYtOI2C4z7+/9sLGxsZrKVMnsVypVLcGfmY8ARMRsuj8AJwGfqgIeYAWwJfBs4IGeQ9e0Py34R0ZGBqxo2YDHazoavF9Jw6vT6Uy5rbaTuxGxE3AlcGlmXgas7tk8G3gQeLhantguSapJLcEfEdsDS4APZebCqvmmiFhQLR8ILAWuAQ6IiJkRsTMwMzN/U0dNkqSuuub4TwS2Bk6OiJOrtmOAcyJic2AMuDwzn4yIpcB1dH+Ejq6pHklSpa45/mPoBv1E+06y76nAqXXUIUlamzdwSVJhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr8kFcbgl6TC1PU8fkl9Wn76S9suQUNo54/+tLbPdsQvSYWpbcQfEfOAMzJzQUR8GXhetWkOcH1mHhoR3wK2Bf4PeCwzD6yrHklSVy3BHxEnAEcAKwEy89CqfWu6L2D/YLXrC4HdMnO8jjokSWura6rnduCQSdpPA87NzLurF7JvBXw7In4UEX9eUy2SpB51vXN3UUTM6W2LiOcC+/HUaH9z4EzgbGAb4JqIuCEz75v4eWNjY3WUqcINS7/aou0CNJTq7J9NXtXzZuCyzHyyWr8H+GxmrgLui4ibgADWCv6RkZEBv3rZgMdrOhq8X20Yy9suQENp0P7Z6XSm3NbkVT2vAxZPWP8qQEQ8C9gdGI4hmCRNY00GfwB3rFnJzMXArRFxPbAEODEzf9NgPZJUpNqmejLzTmB+z/puk+xzbF3fL0manDdwSVJhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr8kFcbgl6TCGPySVBiDX5IKU9uLWCJiHnBGZi6IiLnAt4Fbq80XZOZXIuIU4CBgFXBsZt5QVz2SpK5agj8iTgCOAFZWTXOBszLzzJ595gL7AvOAnYBFwCvqqEeS9JS6pnpuBw7pWR8FDoqIH0bExRExG3g1sCQzxzNzObBpRGxXUz2SpEotI/7MXBQRc3qabgAuysxORHwEOAV4EHigZ58VwJbA/RM/b2xsrI4yVbhh6VdbtF2AhlKd/bO2Of4JrsjMB9csA+cC3wRm9+wzm+6PwVpGRkYG/PplAx6v6WjwfrVhLG+7AA2lQftnp9OZcltTV/V8LyJeWS3vB3SAa4ADImJmROwMzMzM3zRUjyQVq6kR/98A50XEE8A9wLsz8+GIWApcR/cH6OiGapGkotUW/Jl5JzC/Wr4R2HuSfU4FTq2rBknS2ryBS5IKY/BLUmEMfkkqjMEvSYUx+CWpMAa/JBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpT2xu4ImIecEZmLoiIPem+YP1J4HfA2zLz3og4B3gVsKI67ODMfKiumiRJNQV/RJwAHAGsrJrOBt6fmTdHxF8DHwKOA+YCB/iSdUlqTl0j/tuBQ4BLq/VDM/Punu98PCJmAi8CPhcR2wMXZ+bCyT5sbGyspjJVsmHpV1u0XYCGUp39s5bgz8xFETGnZ/1ugIjYG3gfsA/d/n4ucBawCXBlRPw4M38y8fNGRkYGrGjZgMdrOhq8X20Yy9suQENp0P7Z6XSm3NbYyd2IeAvwWeCgzLwfeBQ4OzMfzcwVwH8AezRVjySVqq/gj4ijJqx/YH2+JCIOpzvSX5CZd1TNLwZ+FBGbRMRmwKuBG9fncyVJ62+dUz0RcRjwl8BrI+LPquZNgN2Bc/r5gojYpNp3OfD1iAC4OjNPiYgvAdcD/wd8MTN//gf9KyRJfft9c/zfBe4GtgUurNpW0z15u06ZeScwv1rdZop9PgF8op9CJUkbxjqDPzN/C1wFXBURzwVm9XOcJGl49RXgEXE+cBDwa2AGMA7sXWNdkqSa9Dtynwfskpmr6yxGklS/fi/nvI2npnkkSRuxfkf8OwN3RcRt1fp4ZjrVI0kboX6D/7Baq5AkNabf4H/7JG2nb8hCJEnN6Df4763+zqD7RE2f4y9JG6m+gj8zL+xdj4jF9ZQjSapbv9fxv7hn9fl0T/ZKkjZC/U719I74HweOr6EWSVID+p3qeW1EbAu8ALjDN2ZJ0sar38cy/xVwLXAicH31mGVJ0kao36tzjgNGM/ONwF7AMfWVJEmqU7/BvzozHwGo3pb1eH0lSZLq1O/J3dsj4kzgh8Br6ON5/JKk4dRv8H8O2BfYn+7jGw74fQdExDzgjMxcEBEvBC6h+zjnnwFHZ+bqiDiF7uOeVwHHZuYN6/9PkCStj36nes4CrsjM9wGvqNanFBEnABfx1BM9zwJOyszX0L379+CImEv3x2QecChw/vqXL0laX/2O+Fdl5i8AMvOOiPh9z+W/HTgEuLRaHwWurpYXA68HEliSmePA8ojYNCK2y8z7J37Y2NhYn2VK/RuWfrVF2wVoKNXZP/sN/rsi4uPAdcArgf9Z186ZuSgi5vQ0zagCHmAFsCXwbOCBnn3WtK8V/CMjI32WOZVlAx6v6WjwfrVhLG+7AA2lQftnp9OZclu/Uz3vAO4D3kA3mN+5njX0/g9hNvAg8HC1PLFdklSjfu/cfRz4zADfc1NELMjMq4ADgSvpvtXrExHxKWBHYKZ3BEtS/fqd6hnU3wKfj4jNgTHg8sx8MiKW0p0+mgkc3VAtklS02oI/M+8E5lfLt9C9gmfiPqcCp9ZVgyRpbb5QRZIKY/BLUmEMfkkqjMEvSYUx+CWpMAa/JBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUmKbewEVEHAkcWa3OAvYE3gp8EvhV1X5KZl7dVE2SVKLGgj8zLwEuAYiI84GFwFzghMxc1FQdklS6xqd6IuLlwG6Z+TlgFHhnRCyNiDMjorEfIkkqVRtBeyJwWrX8feAbwC+BzwLvAc6beMDY2Fhjxakcw9Kvtmi7AA2lOvtno8EfEVsBu2bmlVXTwsx8sNr2TeBNkx03MjIy4DcvG/B4TUeD96sNY3nbBWgoDdo/O53OlNuanurZB/h3gIiYAfwkInastu0HTF2pJGmDaDr4A7gDIDPHgaOAr0fE1cAzgc83XI8kFafRqZ7M/OSE9SXAkiZrkKTSeQOXJBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr8kFabpl63fBDxUrf4SuBA4G1gFLMnM05qsR5JK1FjwR8QsgMxc0NN2M/Amuu/h/U5EzM3MG5uqSZJK1OSIfw/gmRGxpPreU4FnZObtABHxPWA/YK3gHxsba7BMlWJY+tUWbRegoVRn/2wy+B8FPgVcBLwIWAw82LN9BbDLZAeOjIwM+NXLBjxe09Hg/WrDWN52ARpKg/bPTqcz5bYmg/8W4LbMHAduiYiHgG16ts/m6T8EkqQaNHlVzzuBMwEiYgfgmcDKiHhBRMwADgCWNliPJBWpyRH/xcAlEfEjYJzuD8Fq4EvAJnSv6vnPBuuRpCI1FvyZ+QTw1kk2zW+qBkmSN3BJUnEMfkkqjMEvSYUx+CWpMAa/JBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgrT2ItYImIzYCEwB3gG8DHgv4FvA7dWu12QmV9pqiZJKlGTr148HHggM4+IiG2Bm4DTgbMy88wG65CkojUZ/F8DLu9ZXwWMAhERB9Md9R+bmSsmHjg2NtZMhSrKsPSrLdouQEOpzv7Z5Dt3HwGIiNl0fwBOojvlc1FmdiLiI8ApwPETjx0ZGRnw25cNeLymo8H71YaxvO0CNJQG7Z+dTmfKbY2e3I2InYArgUsz8zLgisxcU90VwF5N1iNJJWos+CNie2AJ8KHMXFg1fy8iXlkt7wdM/RMlSdogmpzjPxHYGjg5Ik6u2o4DPhMRTwD3AO9usB5JKlKTc/zHAMdMsmnvpmqQJHkDlyQVx+CXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr8kFcbgl6TCGPySVBiDX5IKY/BLUmEMfkkqjMEvSYUx+CWpME2+gWtSETET+GdgD+B3wFGZeVu7VUnS9DUMI/43ArMy80+BDwNntlyPJE1rwxD8rwa+C5CZ1wMvb7ccSZreZoyPj7daQERcBCzKzMXV+nJgl8xcBdDpdNotUJI2UqOjozMma299jh94GJjdsz5zTejD1IVLkv4wwzDVcw3wBoCImA/8tN1yJGl6G4YR/xXA/hFxLTADeEfL9UjStNb6HL8kqVnDMNUjSWrQMEz1qGYRsSPwaeAlwC3ABzPzzlaLkiaIiJ0y81dt11ECg78MnwcuAH4ILAAuBvZrsyAJICI+ADwGbAW8IyK+m5nHtVzWtGfwl2FWZn6rWv5GRHyw1WqkpxwG7Ev3Js7dgB+0W04ZnOMvw6YR8VKANX+lITEOPB+4NzPHgW1arqcIjvjL8H7g4ojYAfg18K6W65HWuJLuFORhEfFpYFHL9RTByzkLEBFvp/sAvFlV03hm7tJiSdLTRMTWwMrMfKLtWkrgiL8MJwB/AXjFhIZKROxD97HsmwBfi4i7MvPilsua9gz+MtzhOw40pD4G7EN3iufjdB/hYvDXzOAvw6MRsRi4me7JNDLzxHZLkoDutOP/RsR4Zj4eESvaLqgEBn8Z/q3tAqQp3BoR/wg8JyI+DNzVdkElMPgLkJlfaLsGaQrPA24HlgKP4BVnjfA6fkltOh7YGngVsBPwx+2WUwYv55TUuojYDjgbeBPd6/r/PjN/3G5V05dTPZJaExEHAkcCuwL/ChwLbEb3vNQe7VU2vRn8ktp0OHBBZl7V2xgRp7VTThmc6pGkwnhyV5IKY/BLUmEMfmlAEbFnRHx0kvYvR8SCFkqS1smTu9KAMvNmuo/DkDYKBr80hYg4EjgYeDbwHOB0YAZwdPUX4M3A7sB7MvPQiDgaOAq4G3hu0zVL/XCqR1q3ZwH7A68HzqL7wvqDMnMBkMABa3aMiC2BY4D5dH8wNm+6WKkfjvildbs6M1cD90bEb+k+3fQLEfEI3ZuOruvZd1fg55n5O4CIuKHxaqU+GPzSuo0CRMT2wJbAe4Edq23f56kpH4A7gJdExB8BTwB70b0bVRoqTvVI6/a8iPgB8B26ob8UuLH6+xiww5odM/N+4KPAtcBiYGXj1Up98M5daQrVyd1dM/PDbdcibUiO+CWpMI74JakwjvglqTAGvyQVxuCXpMIY/JJUGINfkgrz/9l9g3Ur5ZXwAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for col in std_df_string_cols_list:\n",
    "    sns.countplot(x=col, data =std_df_string_cols)\n",
    "    plt.title(col)\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX4AAAELCAYAAADeNe2OAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAEDpJREFUeJzt3XuwnHV9x/F3QhTURrAMOtKCiJbPnI5WzRGDFxqQKoOMYum0aouKeJk6YMloFeUiKWM7Y0soVailIkUZL9yG6ViLpFaMNKIwK3agnvlyUaDWqoByL6Uhp3/sxjmcnBOWcJ7dk/zer3/Y57b7WSCf/eW3z/PskunpaSRJ7Vg67gCSpNGy+CWpMRa/JDXG4pekxlj8ktQYi1+SGrNs3AGkxSbJPsAtwPWDVUuB+4Ezq+qixzh2Gtijqu7sNKT0BFj80tz+p6pevHkhyXOAf03ySFVdOsZc0hNm8UtDqKrbknwU+GCS64GzgeXAs4HvAW+qqodmHpPkI8DbgY3ATcDRVXXPaJNLW3KOXxrevwMvBN4NfLaqDgCeDzwXOHzmjkneABwNvLyqXgD8EDhupGmleTjil4Y3DTwInAC8JsmHgP2APYFfmbXv7wAXV9UvAKrq/aMMKm2NxS8Nb3/6X/h+kf6fnYuArwB7A0tm7buR/gcFAEl2A3arqltHklTaCqd6pCEk2Q84BVgLHAqcVlUXDjavBHaadcjXgCOTPH2wvAZw1K9FwRG/NLenJPne4PEm4CHgI1X1lSQnApcleQC4B1hPf67/l6rqn5P8JrAhCcB/0P9uQBq7Jd6WWZLa4lSPJDXG4pekxlj8ktQYi1+SGrPoz+rp9Xp++yxJ22BycnL29SXAdlD8AJOTk+OOIEnblV6vN+82p3okqTEWvyQ1xuKXpMZY/JLUGItfkhpj8UtSYyx+SWqMxS9JjbH4Jakx28WVu/OZ/ODnxh2hE72/etu4I0jagTnil6TGWPyS1BiLX5IaY/FLUmMsfklqjMUvSY2x+CWpMRa/JDXG4pekxlj8ktQYi1+SGmPxS1JjLH5JaozFL0mNsfglqTELfj/+JE8CzgP2AXYGPgb8CPgycNNgt09V1YVJTgUOBzYCq6vqmoXOI0l6tC5+iOUo4K6qemuS3YHrgNOAM6pq7eadkqwAVgErgb2AS4H9O8gjSZqhi+K/GLhkxvJGYBJIkiPoj/pXA68C1lXVNHB7kmVJ9qiqO2Y/4dTUVAcxF6/W3q+k0Vrw4q+q+wGSLKf/AXAy/Smfc6uql+Qk4FTgbuCuGYfeB+wKbFH8ExMT87zatQuYfPGY//1K0nB6vd682zr5cjfJXsCVwAVV9QXgsqranOIy4CXAvcDyGYctp/9hIEnq0IIXf5JnAeuAE6rqvMHqK5K8bPD4EKAHbAAOTbI0yd7A0qq6c6HzSJIerYs5/hOBZwCnJDllsO79wJlJHgZ+Arynqu5NchVwNf0PoGM7yCJJmqWLOf7jgePn2PSKOfZdA6xZ6AySpPl5AZckNcbil6TGWPyS1BiLX5IaY/FLUmMsfklqjMUvSY2x+CWpMRa/JDXG4pekxlj8ktQYi1+SGmPxS1JjLH5JaozFL0mNsfglqTEWvyQ1xuKXpMZY/JLUGItfkhpj8UtSYyx+SWqMxS9JjbH4JakxFr8kNcbil6TGWPyS1BiLX5IaY/FLUmMsfklqzLKFfsIkTwLOA/YBdgY+BnwfOB+YBm4Ajq2qTUlOBQ4HNgKrq+qahc4jSXq0Lkb8RwF3VdWBwGHAWcAZwMmDdUuAI5KsAFYBK4E3A2d3kEWSNMuCj/iBi4FLZixvBCaB9YPly4HXAgWsq6pp4PYky5LsUVV3zH7CqampDmIuXq29X0mjteDFX1X3AyRZTv8D4GTg9EHBA9wH7Ao8HbhrxqGb129R/BMTE/O82rULlHpxmf/9StJwer3evNs6+XI3yV7AlcAFVfUFYNOMzcuBu4F7B49nr5ckdWjBiz/Js4B1wAlVdd5g9XVJDho8Pgy4CtgAHJpkaZK9gaVVdedC55EkPVoXc/wnAs8ATklyymDd8cAnkjwZmAIuqapHklwFXE3/A+jYDrJIkmbpYo7/ePpFP9uqOfZdA6xZ6AySpPl5AZckNcbil6TGWPyS1BiLX5IaY/FLUmMsfklqjMUvSY2x+CWpMRa/JDXG4pekxlj8ktQYi1+SGmPxS1JjLH5JaozFL0mNsfglqTEWvyQ1xuKXpMZY/JLUGItfkhpj8UtSYyx+SWqMxS9JjbH4JakxFr8kNcbil6TGDFX8Sd41a/lPuokjSerasq1tTPIW4A3AwUlePVi9E/AC4BMdZ5MkdWCrxQ98FfhvYHfgnMG6TcAtXYaSJHVnq8VfVb8AvgF8I8kzgV2GOQ4gyUrg41V1UJIVwJeBmwabP1VVFyY5FTgc2Aisrqprtu1tSJKG9ZgFDpDkbPoF/WNgCTANvGIr+38IeCvwwGDVCuCMqlo7Y58VwCpgJbAXcCmw/+N/C5Kkx2Oo4qdfzvtW1aYh978FOBK4YLA8CSTJEfRH/auBVwHrqmoauD3JsiR7VNUdw8eXJD1ewxb/zfSneR4cZuequjTJPjNWXQOcW1W9JCcBpwJ3A3fN2Oc+YFdgi+KfmpoaMuaOobX3K2m0hi3+vYHbktw8WJ6uqnmneuZwWVXdvfkx8EngH4HlM/ZZTv/DYAsTExPzPO21jyPC9mP+9ytJw+n1evNuG7b43/IEM1yR5H2DL28PAXrABuAvk5wO/DqwtKrufIKvI0l6DMMW/9vnWHfa43id9wJnJXkY+Anwnqq6N8lVwNX0LyQ79nE8nyRpGw1b/D8d/HMJ/TN0HvOK36q6FThg8Pi7zHEWUFWtAdYMmUGStACGKv6qOmfmcpLLu4kjSerasOfx7zdj8dn0v+yVJG2Hhp3qmTnifwj40w6ySJJGYNipnoOT7A48D/iBZ99I0vZr2Nsy/z7wLeBE4NtJjuo0lSSpM8P+EMv7gcmqeiPwEuD47iJJkro0bPFvqqr7AarqPvrz/JKk7dCwX+7ekmQt8E3gQLwfvyRtt4Yd8f898HPgNcA7gLM6SyRJ6tSwxX8G/RutHUf/nvlndBdJktSlYYt/Y1V9H6CqfkD/5xclSduhYef4b0vyF/RvqPYy4L+6iyRJ6tKwI/53AD8DXkf/h1KO6SyRJKlTw165+xBwZsdZJEkjMOyIX5K0g7D4JakxFr8kNcbil6TGWPyS1BiLX5IaY/FLUmMsfklqjMUvSY2x+CWpMRa/JDXG4pekxlj8ktQYi1+SGmPxS1JjLH5JasywP734uCVZCXy8qg5K8nzgfGAauAE4tqo2JTkVOBzYCKyuqmu6yiNJ6utkxJ/kQ8C5wC6DVWcAJ1fVgcAS4IgkK4BVwErgzcDZXWSRJD1aVyP+W4AjgQsGy5PA+sHjy4HXAgWsq6pp4PYky5LsUVV3zH6yqampjmIuTq29X0mj1UnxV9WlSfaZsWrJoOAB7gN2BZ4O3DVjn83rtyj+iYmJeV7p2icedhGa//1K0nB6vd6820b15e6mGY+XA3cD9w4ez14vSerQqIr/uiQHDR4fBlwFbAAOTbI0yd7A0qq6c0R5JKlZnZ3VM8sHgE8neTIwBVxSVY8kuQq4mv4H0LEjyiJJTeus+KvqVuCAweMb6Z/BM3ufNcCarjJIkrbkBVyS1BiLX5IaY/FLUmMsfklqjMUvSY2x+CWpMRa/JDXG4pekxlj8ktQYi1+SGmPxS1JjLH5JaozFL0mNsfglqTGjuh+/Onb7aS8cd4RO7P3R68cdQdrhOOKXpMZY/JLUGItfkhpj8UtSYyx+SWqMxS9JjbH4JakxFr8kNcbil6TGWPyS1BiLX5IaY/FLUmMsfklqjMUvSY0Z6W2Zk1wH3DNY/CFwDvA3wEZgXVX92SjzSFKLRlb8SXYBqKqDZqz7HvB7wA+AryRZUVXfHVUmSWrRKEf8LwKemmTd4HXXADtX1S0ASa4ADgEsfknq0CiL/0HgdOBc4DeAy4G7Z2y/D9h3rgOnpqY6D7eYbMv7fVoHORaD1v7bS6MwyuK/Ebi5qqaBG5PcA/zqjO3LefQHwS9NTEzM85TXLmzCRWL+9zu/2zvIsRhsy78LSdDr9ebdNsqzeo4B1gIk2RN4KvBAkuclWQIcClw1wjyS1KRRjvg/A5yf5N+AafofBJuAzwM70T+r5zsjzCNJTRpZ8VfVw8AfzrHpgFFlkCR5AZckNcfil6TGWPyS1BiLX5IaY/FLUmMsfklqjMUvSY2x+CWpMRa/JDXG4pekxlj8ktQYi1+SGmPxS1JjRvpj69IovPKTrxx3hE5seN+GcUfQDsIRvyQ1xuKXpMZY/JLUGItfkhpj8UtSYyx+SWqMxS9JjbH4JakxFr8kNcbil6TGWPyS1BiLX5Ia403apB3Y+t9eNe4IC27VN9dv03FnfeDLC5xk/I5b+/ptOs4RvyQ1xuKXpMZY/JLUmLHP8SdZCvwt8CLgf4F3VdXN400lSTuuxTDifyOwS1W9HPgwsHbMeSRph7YYiv9VwFcBqurbwEvHG0eSdmxLpqenxxogybnApVV1+WD5dmDfqtoI0Ov1xhtQkrZTk5OTS+ZaP/Y5fuBeYPmM5aWbSx/mDy5J2jaLYapnA/A6gCQHANePN44k7dgWw4j/MuA1Sb4FLAHeMeY8krRDG/scvyRptBbDVI+2Q0l2HneGcUvylCRPHneOcUvyzHFnWCySLE3ya4PrkxYtR/zaqiSvB84C/g84qaouHKz/elW9eqzhRizJc4G/Bn4CXAKcCzwCHF9V/zTObKOUZL9Zqz4HvA2gqm4cfaLxSvKZqnpnkpXA54G76J+wcszgFPVFZzHM8WtxOwl4Cf3vXy5OsktVfXaw3Jp/AE4F9qFf/PsBDwGXA80UP/A14EHgx/T/PwhwDjANNDUYGHju4J9/DhxWVTcl2RP4IrAob49q8c8hyZXA7KmMJcB0Vb1iDJHG6eGq+jlAkiOArw+utWjxr4rLqmo9sD7JwVX1M4AkGx/juB3NS4G/Az5VVf+S5MqqOnjcoRaBR6rqJoCq+vFinu6x+Of2YeDTwO8Crf2hnu3WJGcAp1TVfUmOBK4AdhtzrnGowQWH76mqowGSfJj+1E8zqupnSf4AOD3J/uPOswjslqQHPC3JO+lP96wFbhtvrPlZ/HOoqu8kuQD4raq6bNx5xuwY4CgGI/yq+s8kBwMfGWuq8Xg38Pqq2jRj3Y+AT4wpz9gMLrJcneRoGj9JpKpWDE52eBH9KbBN9K9H+sxYg22FX+5KUmOa/qSWpBZZ/JLUGOf4pTkkOQi4CPg+/TO6ngScWVUXzbP/+cCXquqro8oobStH/NL8vl5VB1XVKuC1wAlJXjzuUNIT5YhfGkJV3Z/kHOBNSY4D9gJ2By6vqlM275fkKfQv9HoO/b8lvK+qrh5HZmk+jvil4f2U/lXM366qQ+n/etx7Z+3zx8Ctg58SPRpYOdKE0hAc8UvDew7wLWD/wbUM97LlFd6hfwsHquoG4IaRJpSG4IhfGkKS5fQv4LoHuLuq/oj+1ZlPTTLzvkVTwP6DY/ZN8oWRh5UegyN+aX6vTvIN+nfgXEb/Bm0FfCnJgcADwE3AnjOOOQc4L8l6YCdg9UgTS0Pwyl1JaoxTPZLUGItfkhpj8UtSYyx+SWqMxS9JjbH4JakxFr8kNeb/ARqe0QFkrIdgAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX4AAAELCAYAAADeNe2OAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAEmNJREFUeJzt3X2wXHV9x/H3DZCkgyFaLLVaLD7x9fYBkKtAwZCLohgexDLWqsOgIrTTCRUURR6LMqJlKqiIDzTRgk5bOwbTFjQiCMSIUHBFa8brF8FiWp9ANBhGHgy5/eOcNMvlbrK55pzd5Pd+zWTYc3bPuZ/dhM/97W/POTsyOTmJJKkcswYdQJLULotfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr9Ui4gvRsSpXct7R8RkRLy3a90eEfFIRMzvsY/xiFjdRl5ppix+aZMVwGFdy8cAVwPHdq17CXBzZj7QZjBpW9p50AGkIbICOD8iZmXmBqriPxv4TEQ8JzPvBl4KfD4ijq7vmw3sAVyZmed17ywingR8GDgEWA/8G3BOZnrWpAbKEb9Uy8w7gV8A+0TEU4AAbgW+ALyyfthL6+XTgTdk5guBg4CzIuKpU3Z5ATAXGAX2o/oFsLDp5yFtiSN+6fFWAOPAvcB1mbkhIq4BFkfEcmAyMyci4hjg6Ih4PVWxjwC7TtnX4cDbMvMx4DEsfQ0JR/zS460ADgWOBq6p130ZeAFVkX8+InYF7gD2B74BvAP4NVX5d1sP/P+0TkTsGRG7N5pe6oPFLz3ejVTTMguBawEy8yGgA5wCfB54HrAbcG5mXk31DmEOsNOUfV0PvCEiZkXEHGAZjvo1BCx+qUtm/gr4XnXzcUfubCz8m4D/ono38N2ImKD6EPg7wHOn7O7dwKPAt6jeIXwhMz/X6BOQ+jDiZZklqSyO+CWpMBa/JBXG4pekwlj8klSYoT+Bq9Pp+OmzJM3A2NjY1HNLgO2g+AHGxsYGHUGStiudTqfnfU71SFJhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYbaLM3d7GXvHpwYdoRGdvz9h0BEk7cAc8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqTGPFHxEHRsRNU9a9PiJu6Vo+OSK+HhG3RsTRTWWRJG3SSPFHxBnAUmBu17r9gDcDI/Xy04C3AIcARwDvi4g5TeSRJG3S1EXa7gaOAz4NEBG7A38HnAYsqR9zAHBzZj4CPBIRdwH7ALdP3dnExERDMYdTac9XUrsaKf7MvCoi9gKIiJ2ATwBvBR7qethuwANdy+uA+dPtb3R0tMdPesLviB1C7+crSf3pdDo972vjssxjwPOAj1FN/fxhRHwQuAGY1/W4ecDaFvJIUtEaL/7MvA34I4D6XcBnMvO0eo7/woiYC8wBRoHVTeeRpNIN7HDOzPwJcCmwimr0f05mPjyoPJJUisZG/Jl5D3DQ5tZl5hI2fdgrSWqBJ3BJUmEsfkkqjMUvSYWx+CWpMBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhWnsO3cj4kDgoswcj4j9gA8DjwGPACdk5k8j4mTgr4D1wHsy85qm8kiSKo2M+CPiDGApMLde9SHgbzJzHPgc8M6IeBrwFuAQ4AjgfRExp4k8kqRNmprquRs4rmv5tZn5zfr2zsDDwAHAzZn5SGY+ANwF7NNQHklSrZGpnsy8KiL26lr+MUBEHAycAhxKNcp/oGuzdcD86fY3MTHRRMyhVdrzldSuxub4p4qIvwDOAY7KzPsi4pfAvK6HzAPWTrft6Ohoj73evm1DDonez1eS+tPpdHre10rxR8TxVB/ijmfmz+vVtwEXRsRcYA4wCqxuI48klazx4o+InYBLgTXA5yICYGVmnh8RlwKrqD5rOCczH246jySVrrHiz8x7gIPqxd/u8ZglwJKmMkiSnsgTuCSpMBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVJjGvmw9Ig4ELsrM8Yh4LnAFMAmsBhZn5oaIOB84ClgPnJaZtzWVR5JUaWTEHxFnAEuBufWqS4BzM3MBMAIcGxH7AwuBA4HXAh9pIosk6fGamuq5Gziua3kMWFnfXgEcDrwY+FJmTmbmGmDniPidhvJIkmqNTPVk5lURsVfXqpHMnKxvrwPmA7sB93c9ZuP6+6bub2JioomYQ6u05yupXY3N8U+xoev2PGAt8Mv69tT1TzA6Otpjt7dvk3DDpvfzlaT+dDqdnve1dVTPHRExXt9eBKwCbgaOiIhZEfFMYFZm/qylPJJUrLZG/KcDSyJiNjABLMvMxyJiFXAL1S+gxS1lkaSiNVb8mXkPcFB9+06qI3imPuZdwLuayiBJeiJP4JKkwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9Jhemr+CPipCnLb2kmjiSpaZu9Hn9EvA54JXBYRLykXr0T8MfApQ1n01ZYc8GfDDpCI575t98edARph7OlL2L5IvBjYHfg8nrdBuDuJkNJkpqz2eLPzF8ANwE3RcQewNx+tpMkDa++CjwiPgIcBfwIGAEmgYMbzCVJaki/I/cDgWdn5oYmw0iSmtdv8d9FNc3zq5n+oIjYBbgS2At4DDgZWA9cQfUOYjWw2F8uktSsfo/jfybwg4i4pf7ztRn8rCOBnTPzYOAC4ELgEuDczFxANYV07Az2K0naCv2O+F+3DX7WncDOETEL2A34NXAQsLK+fwXwcmD51A0nJia2wY/ffszk+e7aQI5hMJPX4qTrT9ryg7ZDSw9fOugI2kH0W/xvmGbdBVv5sx6kmub5LvBU4Gjg0MycrO9fB8yfbsPR0dEeu7x9KyNsH3o/397WNJBjGMzkteD6bZ9jGMzotVCxOp1Oz/v6ner5af3nXuD3qaZ+ttZbgWszc29gX6r5/tld988D1s5gv5KkrdDXiD8zL+9ejogVM/hZv6Ca3gH4ObALcEdEjGfmTcAi4MYZ7FeStBX6PY5/767F32NmI/4PAJ+MiFVUI/2zga8DSyJiNjABLJvBfiVJW6HfOf7uEf/DwNu39gdl5oPAa6a5a+HW7kuSNHP9TvUcFhG7A88Bvp+ZP2s2liSpKf1elvnPga9RTc/cGhHHN5pKktSYfo/qeRswlpmvAl4AnNpcJElSk/ot/g31HD2ZuY5qnl+StB3q98PduyPiYuArwAK8Hr8kbbf6HfH/A9Wx9y8D3gRc1lgiSVKj+i3+S4DlmXkK8KJ6WZK0Heq3+Ndn5ncAMvP7VF+/KEnaDvU7x/+DiHgvcAtwAPDD5iJJkprU74j/TVQXaDsSuA84sbFEkqRG9Xvm7sPABxvOIklqQb8jfknSDsLil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMP1esmGbiIizgFdSfdn6R4GVwBXAJLAaWJyZXgdIkhrU2og/IsaBg4FDqL5gfU+qq3yem5kLgBHg2LbySFKp2pzqOQL4NrAcuBq4BhijGvUDrAAObzGPJBWpzamepwJ/ABwNPAv4D2BWZk7W968D5k+34cTERCsBh8VMnu+uDeQYBqX93W+Or4W2lTaL/37gu5n5KJAR8TDVdM9G84C10204OjraY5e3b9uEQ6L38+1tTQM5hsFMXguu3/Y5hsGMXgsVq9Pp9LyvzamerwKviIiRiHg61SD1y/XcP8AiYFWLeSSpSK2N+DPzmog4FLiN6hfOYuC/gSURMRuYAJa1lUeSStXq4ZyZecY0qxe2mUGSSucJXJJUGItfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVJhWz9yV1K6Vh+6YJ8Yv/MrKLT9IPTnil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMBa/JBXG4pekwlj8klSY1i/ZEBF7AB3gZcB64ApgElgNLM7MDW1nkqSStDrij4hdgMuBh+pVlwDnZuYCYAQ4ts08klSitkf87wc+DpxVL48BG6+2tAJ4ObB86kYTExOthBsWM3m+uzaQYxiU9ne/Ob4Wm/ha/GZaK/6IeCNwX2ZeGxEbi38kMyfr2+uA+dNtOzo62mOvt2/bkEOi9/PtbU0DOYbBTF4Lrt/2OYbBTF6LexvIMQxm9O+iMJ1Op+d9bY74TwQmI+JwYD/gU8AeXffPA9a2mEeSitTaHH9mHpqZCzNzHPgmcAKwIiLG64csAla1lUeSSjXoL2I5HVgSEbOBCWDZgPNI0g5vIMVfj/o32jG/IkiShpQncElSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYUZ9EXaJKkVl51+9aAjNOKUi4/Z6m0c8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IK09oJXBGxC/BJYC9gDvAe4DvAFcAksBpYnJkb2sokSSVqc8R/PHB/Zi4AFgGXAZcA59brRoBjW8wjSUVq85INnwWWdS2vB8aAlfXyCuDlwPKpG05MTDQebpjM5Pnu2kCOYVDa3/3m+Fps4muxyUxei9aKPzMfBIiIeVS/AM4F3p+Zk/VD1gHzp9t2dHS0x15v39Yxh0Lv59vbmgZyDIOZvBZcv+1zDIOZvBb3NpBjGMzktfgydzWQZPB6vRadTqfnNq1+uBsRewI3Ap/OzH8Guufz5wFr28wjSSVqrfgj4neBLwHvzMxP1qvviIjx+vYiYFVbeSSpVG3O8Z8NPAU4LyLOq9edClwaEbOBCR7/GYAkqQFtzvGfSlX0Uy1sK4MkyRO4JKk4Fr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMK0+WXr04qIWcBHgX2BR4CTMvOuwaaSpB3XMIz4XwXMzcw/Bc4ELh5wHknaoQ1D8b8Y+CJAZt4KvHCwcSRpxzYyOTk50AARsRS4KjNX1MtrgGdn5nqATqcz2ICStJ0aGxsbmW79wOf4gV8C87qWZ20sfegdXJI0M8Mw1XMzcCRARBwEfHuwcSRpxzYMI/7lwMsi4mvACPCmAeeRpB3awOf4JUntGoapHm2HImLOoDMMWkT8VkTMHnSOQYuIPQadYVhExKyIeEZ9ftLQcsSvzYqIY4DLgF8D52Tmv9brb8jMlww0XMsi4lnAB4CfAMuApcBjwKmZec0gs7UpIvaesupTwAkAmXln+4kGKyI+kZlvjogDgX8C7qc6YOXE+hD1oTMMc/wabucAL6D6/OWzETE3M6+sl0vzj8D5wF5Uxb838DCwAiim+IHrgV8BP6L6dxDA5cAkUNRgoPas+r8XAosy83sR8XTgX4CFg4vVm8XfQ0TcCEydzhgBJjPz4AFEGpRHM/PnABFxLHBDfa5FiW8Vd87MlcDKiDgsM+8FiIj1W9huR/NC4OPAxzLzuoi4MTMPG3SoIfBYZn4PIDN/NMzTPRZ/b2cCS4A/A0r7H7vbPRFxCXBeZq6LiOOAa4EnDzjXIGR9wuFfZuYbASLiTKqpn2Jk5r0R8Rrg/RHxokHnGQJPjogOsGtEvJlquudi4AeDjdWbxd9DZv5nRHwa2Cczlw86zwCdCBxPPcLPzP+JiMOAswaaajBOBo7JzA1d6/4XuHRAeQamPsnytIh4I4UfJJKZ+9cHO+xLNQW2gep8pE8MNNhm+OGuJBWm6N/UklQii1+SCmPxS1NExA0RcUB9e3ZEPBARb++6f2VE7DvNduMR8Zk2s0ozYfFLT/QlYEF9ewHVUUxHAUTEXGDPzPzWgLJJvzGP6pGe6DrgPKpD8o6kOkP3ooiYD+xPdRz/q4HFbDqR7dXdO6gP6/trYCfg3zPzXe1El7bMEb/0RHcAz4+IEeBQYCXV2aqHA+NU3xi3N3BUZo4DCRyxceP62jVnUr1bGAPmR8STWswvbZYjfmmKzNwQEd8CXgH8JDMfiYgVwNFUx2p/iOpaLFdGxIPA84FbunbxbGB1Zj5UL7+1vfTSljnil6Z3HXA21XV4AL5KNc0D1YXZ3g28FjgJeIjHX7vobqp3DHMAImJZRDyjjdBSPyx+aXrXAS8GvgCQmY8Ca4GvUH1d6M3AN4BVVMX/9I0bZuZ9wEVUnwXcAnwjM3/YanppMzxzV5IK44hfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TC/B8CFEjBrN2e+wAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXgAAAERCAYAAABxZrw0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAFCNJREFUeJzt3XmUXGWZx/FvI5tADA6bMC4sykM7OiDRAcVAUBwMiAjijgu4MICKgiPKgIqjDDgSBQRBFlEEF6IsggGHg0AURGlAWZqHbUCPIALHYFgcgfT8cW9LJ3SSSt26ne63v59zcqh7q+9zH6qrf/XWW/fe6hsaGkKSVJ4VlncDkqR2GPCSVCgDXpIKZcBLUqEMeEkqlAEvSYVacXk3II03EbE3sA8wBVgFuBM4NDOvjoh/Br4OrAEsAA7JzDnLrVlpCfo8Dl56SkQcAWwLvCsz767XvQb4PjANuAD4TGaeGxEvAa4C1srMvy2vnqXFcQQv1SJiPeBjwCaZee/w+sy8NCIOBFYHtgSerO/aBJg3YlkaVwx46SmvBAZHhvuwzDxj+HZE9EXEHcCGwAGZacBrXDLgpaf0AX+fs4yIKcDcenEN4AeZeUhmDgGbRMRGwNyIuDkzLx37dqUlcw5eqkXEBsCtwAsy88FF7vscsC5wBVXQL6jXnw7ckJlHj2230tJ5mKRUy8x7gGOAsyPi+cPrI+IFwDbA48AXgLfX6zcAtgcuH/tupaVzBC8tIiLeBexL9aHqVODPwPeA46k+WD0eeBbVYZJHZuYPllOr0hIZ8JJUKKdoJKlQBrwkFcqAl6RCGfCSVCgDXpIKNa7OZB0YGPCQHknqwrRp0/oWXTeuAh5g2rRpy7sFSZpQBgYGRl3vFI0kFcqAl6RCGfCSVCgDXpIKZcBLUqEMeEkqlAEvSYUy4CWpUOPuRCdNTjude1DjGj95k9+aJ43kCF6SCmXAS1KhDHhJKpQBL0mFMuAlqVAGvCQVyoCXpEIZ8JJUKANekgplwEtSoQx4SSqUAS9JhTLgJalQBrwkFcqAl6RCGfCSVCgDXpIKZcBLUqFa+8q+iLgOeKhe/F/gJOAY4Angp5l5eFv7liS1FPARsSpAZs4Yse564M3AncCFEbFlZl7bxv4lSe2N4DcHVouIn9b7+BywSmbeARARFwOvBQx4SWpJWwH/KPBl4BTgRcAcYN6I++cDG4+24eDgYEstqXQ+d6SFtRXwtwK3Z+YQcGtEPAT8w4j7p7Bw4P9df39/Sy1pXMvmJXzuaLIaGBgYdX1bR9HsDRwNEBEbAKsBj0TEJhHRB+wIzG1p35Ik2hvBnwqcHhE/B4aoAn8BcCbwDKqjaK5uad+SJFoK+Mz8G/DOUe7auo39SZKezhOdJKlQBrwkFcqAl6RCGfCSVCgDXpIKZcBLUqFau5qktLzt/KPjGte4cPeP9KATaflwBC9JhTLgJalQBrwkFcqAl6RCGfCSVCgDXpIKZcBLUqEMeEkqlAEvSYUy4CWpUAa8JBXKgJekQhnwklQoA16SCmXAS1KhDHhJKpQBL0mFMuAlqVAGvCQVyoCXpEIZ8JJUKANekgq1YluFI2JdYAB4HfAEcDowBNwI7J+ZC9ratySppRF8RKwEnAQ8Vq+aBRyamdOBPmDXNvYrSXpKW1M0XwZOBO6pl6cBl9e35wA7tLRfSVKt51M0EfE+4P7MvDgiPl2v7svMofr2fGDq4rYfHBzsdUuaJNp47vh81ETWxhz83sBQROwAbAF8G1h3xP1TgHmL27i/v7+FljTuZfMST3vuDF7S+5rSODQwMDDq+p5P0WTmtpm5XWbOAK4H3gPMiYgZ9Y/MBOb2er+SpIW1dhTNIg4CTo6IlYFBYPYY7VeSJq1WA74exQ/brs19SZIW5olOklQoA16SCmXAS1KhxupD1mVy/9e/07jGOvvu2YNOJGnicgQvSYUy4CWpUAa8JBXKgJekQhnwklQoA16SCmXAS1KhDHhJKpQBL0mFMuAlqVAGvCQVyoCXpEIZ8JJUKANekgplwEtSoQx4SSqUAS9JhRqX3+gkafw56px7G9c4eLf1e9CJOuUIXpIKZcBLUqE6CviI+MAiyx9tpx1JUq8scQ4+It4BvBHYPiJeU69+BvAS4NiWe1OPnHTGjo223+fdF/eoE0ljaWkfsl4E3AusBZxUr1sA3NFmU5Kk5pYY8Jn5Z+Ay4LKIWBdYtZPtJEnLX0dBHRHHAzsD9wB9wBDwqhb7ksalN8w+s3GNC/Z410LLu86e07jmeXvMbFxD5el0JL4VsHFmLujkhyPiGcDJQABPAntRvTCcTvXicCOwf6f1JEnLrtPDJG/nqemZTuwCkJnbAJ8BZtX/Ds3M6VRhv+sy1JMkLaNOA/75wN0RcVX978ol/XBmngt8qF58AXAfMA24vF43B9ihi34lSR3qdIrmHctaODOfiIhvAbsBewBvyMyh+u75wNTRthscHGTtZd3ZYuqoNybKY9lGn5O55tOt2bjCRHkulaLTgH/vKOs+v7SNMvO9EXEwcDXwzBF3TQHmjbZNf38/91820GFbi9ff39+4RimuuKbZ9mPyWGbzEk/rc/CS3te86doWat7V+5otOP+W5tei8e+yHQMDo2dmp1M099X//gQ8l2rKZrEi4t0R8el68VGqY+eviYgZ9bqZwNwO9y1J6kJHI/jMPGnkckQs7biuHwHfjIgrgJWAjwGDwMkRsXJ9e/aytytJ6lSnx8FvOmJxfZYygs/MR4C3jnLXdp23JklqotM5+JEj+L8Cn2ihF0lSD3U6RbN9RKwFbALcmZkPtNuWJKmpTi8X/BbgSuAQ4JcRsWerXUmSGut0iuZAYFpmPhwRU4BLge+015bGu4Nnv77R9kftcVGPOpG0OJ0eJrkgMx8GyMz5VPPwkqRxrNMR/B0RcTRwBTAdrwcvSeNepwH/DapDHF9HddmCZl8RJKlVe/yw+Rm3s9+8ZQ860fLU6RTNLOCczPww8Ip6WZI0jnUa8E9k5s0AmXkn1aUHJEnjWKdTNHdHxBHAVcC/AH9oryVJUi90OoLfi+pCYzsB9wN7t9aRJKknOj2T9a/AV1vuRZLUQ52O4CVJE4wBL0mFMuAlqVAGvCQVyoCXpEIZ8JJUKANekgplwEtSoQx4SSqUAS9JhTLgJalQBrwkFcqAl6RCGfCSVCgDXpIKZcBLUqEMeEkqVKffydqxiFgJOA3YEFgF+AJwM3A6MATcCOyfmX5xtyS1qI0R/J7Ag5k5HZgJfA2YBRxar+sDdm1hv5KkEdoI+LOBw0YsPwFMAy6vl+cAO7SwX0nSCD2fosnMhwEiYgowGzgU+HJmDtU/Mh+YurjtBwcHWbsHfQwODvagiqCdx9KaE7Hmmi3UVJt6HvAAEfE84BzghMw8KyK+NOLuKcC8xW3b39/P/ZcNNO6hv7+/cY1SXHFNs+1HfSxv6nHNbFZv1JqDl/S+5k3XtlDzrt7XvLn3fZ5/y709r6neGBgYPTN7PkUTEesBPwUOzszT6tXXRcSM+vZMYG6v9ytJWlgbI/hDgGcDh0XE8Fz8AcCxEbEyMEg1dSNJalEbc/AHUAX6orbr9b4kSYvniU6SVCgDXpIKZcBLUqEMeEkqlAEvSYUy4CWpUAa8JBXKgJekQhnwklQoA16SCtXK1SQlqRNzvv9A4xoz39aLC4yXyRG8JBXKgJekQhnwklQo5+Ab+PVJuzSu8Yp9ftyDTiTp6RzBS1KhDHhJKpQBL0mFMuAlqVAGvCQVyoCXpEIZ8JJUKANekgplwEtSoQx4SSqUlyqQpKX449G3NK7xnIM260Eny8YRvCQVyoCXpEIZ8JJUqNbm4CNiK+CozJwRES8ETgeGgBuB/TNzQVv7liS1NIKPiE8CpwCr1qtmAYdm5nSgD9i1jf1Kkp7S1hTNHcDuI5anAZfXt+cAO7S0X0lSrZUpmsz8YURsOGJVX2YO1bfnA1MXt+3g4CC9+I70wcHBHlRp30Tos40erTkRa67ZQs11WqjZe8+mr3GN5fG3PlbHwY+cb58CzFvcD/b393P/ZQONd9jf39+4xtL8+ormNcaizyuuabb9qD3e1OOa2azeqDUHL+l9zZuubaHmXb2veXPv+zz/lnt7XvOu3z7Q85pt+ONPmh8H32afAwOjZ+ZYHUVzXUTMqG/PBOaO0X4ladIaqxH8QcDJEbEyMAjMHqP9StKk1VrAZ+ZdwNb17VuB7draV0nOO21mo+133XtOjzqRNNF5opMkFcqAl6RCGfCSVCgDXpIKZcBLUqEMeEkq1KT5Rqd7Tzi4cY319zuqB51I0thwBC9JhTLgJalQBrwkFWrSzMFLmhxuOvG+xjX+6d/W60Eny58jeEkqlAEvSYUy4CWpUM7BS9Jy8Kfjfta4xrof2X6J9zuCl6RCGfCSVCgDXpIKZcBLUqEMeEkqlAEvSYUy4CWpUAa8JBXKgJekQhnwklQoA16SCmXAS1KhDHhJKpQBL0mFGrPLBUfECsAJwObA/wEfyMzbx2r/kjTZjOUI/k3Aqpn5SuBTwNFjuG9JmnTGMuBfDVwEkJm/BF4+hvuWpEmnb2hoaEx2FBGnAD/MzDn18u+AjTPzieGfGRgYGJtmJKkw06ZN61t03Vh+Zd9fgCkjllcYGe4weoOSpO6M5RTNL4CdACJia+CGMdy3JE06YzmCPwd4XURcCfQBe43hviVp0hmzOXhJ0tiaUCc61cfS97xmRPxjr2tHxNoR0egzhYh4Vq/6WcI+Vo6IZ/awnp+jSOPEuB/BR8TGwCyqwyqfoHpRugH4eGbe2mXNUzPz/RGxFXAm8CDVB8B714dwdlNzL+B5wAXAWcBfgdWA/TLzki5rPgp8JDNP7Wb7xdTcFDgC+BtwLPBtqqm6T2fm97usuQlwPNAPbAAMAHcCB2bmH3vRt6RlN5Zz8N06hSp8rh5eUX9I+01gmy5rblT/94vAzMy8LSI2AL4LbNdlzf2AGcD5wBsz89a65nlAVwEP/AZ4WURcChyemZd3WWekk4H/BKZSvRhtDsyre+wq4KnC/aP1//PWwM7AucCp9e2uRMSuwA51r/OAucDszBw3o5KIWIfqxL3HgK9k5oP1+s9m5uFd1uwD3gjcByTwFeBJ4JDMvK9Hfc/KzAMb1nhLZp4dEasDnwO2oHpx/0JmPtxlzY2AzYDLqB7XacBNwBGZ+VCXNc8CPpaZf+pm+yXU3Rl4nKrXWcCaVL+j3zWo+U6qc4ZWBx4A/iczL+q23kQI+FVHhjtUJ0pFRC9qP5mZt9U172k4TfN4Zj4SEfOpRq/DNZuE0WOZ+eGIeDnw6Yg4niqI78zMY7usuWJmXlKHyBGZ+QeAiHi8QZ9Th99N1b+bIzLzsIh4drcF6//XFYA5wHyqd1gzgR2BD3RZ80OLuy8zv9FNTap3QOdQ/S1dERE7ZebddD9QADiO6g/8OcBawElUj8EpwC7dFKwPbhjWB/TXL8Zk5qu67HNf4GzgGKrn/EeB1wLfAN7ZZc1vA4fVNX8PHApsS/WuuNvBwiuBiyLiOOD0XgwQ6vN6VqV6Xh4OnAHcQzWA2rHLmscAD1ENEnepb+8UEdtk5mHd1JwIAf+biDiN6izYh6ge0J2A3zaouWZEDACrR8T7qaZpjgbublDz/Ig4D7gRuCAiLgZeD1zaoGYfQGZeA7w5IqZSPdmbvLrdFRHfo/rdPxwRX6R6XO9tUPPOiDiRKozfAFwfEbsDjzSo+ZLMXDQkz4+IXzSouRnVH84Z1I9trckf/CrDLw4RcT1wXkTMWKT+sto8M6dHxMrAjcNTdBGxT4OaXwP2Bg6g+r18F3hHg3ojvSgzh190B+vffbeezMzLIuI/MnP4Bfn6iHhrg5p3AbtRBfFv6xH9HKqB0l+6rLlpZm5bD5RuyswTACLigAZ9bjHiOX9RRPw4M3eJiJ93W3AiBPx+VNexeTXwLKoTpi6gGjV1JTO3jIhVqKYnHgUWUM3rdz3XnZlHRsR2VK/evwPWBY7NzAu7rQmcvsg+HgJ+XP/r1nupXiBvBR4GPk71GOzdoOZewAeBfwV+BZwGvAJ4e4OaK0TE9MycO7wiIralekvclcw8MCI2A+Zk5q8b9DbSihHx0sy8ITOvjIj/ohqBrdGkaD1q+0VE7FAvvxBYpdt6mXlWRNwM/DfV7/yx+p1GE5tGxMeBxyPiZZl5Xf1us+s+gXkRsQdwYUS8h+q5vhPVc7RbQ5k5DzignlLbg+pdwqbAS7usuVJE7AisDaxXP6/mAys16HPViNgqM6+OiOlUz63nUL2b68q4/5BVk1P9we0sqjnYPqoX4WuBTwxPq3VZd21gjcy8q0d9bgF8FXjb8Px4ROwJHJOZa3VZ88VUnw/tPjydUL87PDIzr2rY71pUUz0vzMxuw2241suALal+R1dTfe5yMbBvZl7XZc11gC9Rfb62IdUBEHOpfu9dzW1HxHczs1fvVoZrbgF8BrgOuI1qSulB4IOZ2dW7zIjYkmo67rnAHVSDrp2B2zLzgm5qGvBSCyJihcxcsLz7GE39WdOW9dSfCjYRpmg0CUXEz1jMW/1uPxRcTM0+qrfwvaw5rOc1e9lnPX/cyv/7BKg5Kf7fDXiNV5+iOiJhN6rzH6xpTWsuI6doNG5FxL8Dt2dm1x+oW9Oak7mmAS9JhZpQ16KRJHXOgJekQvkhq7SI+gJ3X6I6HvlRquvMfJLqOOczgZWpzvx9X2Y2OQFHapUjeGmEiFiN6kzUozNz68x8DdUp7sdTHeXwrcycDtwMNLl0gNQ6R/DSwnYBLh15xmhm/ioitq8X++oThZ5HdbkHadwy4KWFbQTcPrxQXyJgKrA+1ZUS76O6jPOqwOeXR4NSp5yikRb2e576vgAyc9fMnAH8mepSy49n5ouBD1Fd2lYatwx4aWHnATsMXysd/n4lx+cCnx0xVTOf6gJo0rjliU7SIiJiQ+BIqmmZFalOGz+K6kstTqS6fvwC4MOZObic2pSWyoCXpEI5RSNJhTLgJalQBrwkFcqAl6RCGfCSVCgDXpIKZcBLUqEMeEkq1P8D9BPG9XUrx+8AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for col in std_df_numeric_cols_list:\n",
    "    sns.countplot(x=col, data =std_df_numeric_cols)\n",
    "    plt.title(col)\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu',\n",
       "       'Mjob', 'Fjob', 'reason', 'guardian', 'traveltime', 'studytime',\n",
       "       'failures', 'schoolsup', 'famsup', 'paid', 'activities', 'nursery',\n",
       "       'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc',\n",
       "       'Walc', 'health', 'absences', 'G1', 'G2', 'G3'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX4AAAECCAYAAAD5OrxGAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAEjdJREFUeJzt3X2QXXV9x/H3hhCYsZH6SGtFU7B+WcaplO0IIpDUxmqMitraMsrY+jhjYwcdrTw0KFrtoFUY0CoWpKgj9SFIC0Iq9aExAtZxDa3R6xdLRGeKWkCDYXTVkO0f56wuy93s3WzOuefm937NZDjn3Hv3fLJkP/u7v/Nwx6anp5EklWPZsANIktpl8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVJjlww4gdVFELAMuBE4AVgJjwMuBW4F/Ao4C7ga+D2zPzPMiYhy4CHgYcBBwcWZePoT40l454pf6Ox54FPDkzDwG+CBwFnAx8PXMHAdeAJwIEBHLgU3AWZk5AawGXh8RJwwjvLQ3Y96yQeovIgJ4KtXofg2wCzgOOC4zb6ufczHwQ+DjwFeBb876EocB78jM97UYW1qQUz1SHxGxnmra5l3Av1IV+unAbqppnxn31f89CLgnM4+d9TUOB+5pJbC0CE71SP09Dbi2Hq1/BXguVblfB7wMICIeBjwPmAYS+GlEnF4/dgSwHZhoP7q0d071SH1ExNHAP1O9K14O3AD8MfBE4DLgcVQHd8eAT2Xm30fEE6neJTwUOBi4KDMvGUJ8aa8sfmkRIuIvgW2ZeXNEHAJsBd6UmZuHHE0amHP80uJ8A3h3RBwErAA+Yelr1Djil6TCeHBXkgpj8UtSYSx+SSpM5w/uTk5OehBCkvbBxMTEWL/tnS9+gImJfb8GptfrMT4+vh/TNGeUssJo5TVrc0Yp7yhlhaXlnZycnPcxp3okqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhRmJC7gOZKvOum7Olh19n3f7+eubDyOpCI74JakwFr8kFaaxqZ6IOB54e2auiYjHAVdQfSj1dmBDZu6JiDcB64HdwGsy88tN5ZEkVRoZ8UfEG6g+kPrQetMFwMbMPJnqw6lPjYjjgNXA8cBpwD80kUWSdH9NTfXcBjx/1voEsKVe3gysBU4CbsjM6cz8LrA8Ih7RUB5JUq2RqZ7MvCoiVs3aNJaZM/fV3wUcBjwYuHvWc2a23zn36/V6vX3OMjU1taTXd0UX/w6j9L01a3NGKe8oZYXm8rZ1OueeWcsrgZ3Aj+vludsfYCn3z+7+/bf7n745Vxf/Dt3/3v6KWZszSnlHKSuM/v34t0XEmnp5HbAVuBF4ekQsi4jHAMsy866W8khSsdoa8b8OuDQiVgA9YFNm3hcRW4GbqX4BbWgpiyQVrbHiz8zbgRPq5VupzuCZ+5zzgPOayiBJeiAv4JKkwnivHi3ogfcTmu1XB6e9n5A0GhzxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVZvmwAzRt3Qd3ADsWfN7t569vPowaseqs6wZ63u3njzecRBoNrRV/RBwMfBBYBdwHvALYDVwBTAPbgQ2ZuaetTJJUojanep4JLM/ME4G3AG8DLgA2ZubJwBhwaot5JKlIbRb/rcDyiFgGPBj4BTABbKkf3wysbTGPJBWpzTn+e6mmeb4JPBx4FnBKZk7Xj+8CDuv3wl6v13i4NvaxFF3PB93P2PV8M6ampkYmK4xW3lHKCs3lbbP4Xwt8OjPPjogjgM8BK2Y9vhLY2e+F4+NLOSi38IHdpe9jKbqeD7qfsev5FqfX641MVhitvKOUFZaWd3Jyct7H2pzq+RFwT738Q+BgYFtErKm3rQO2tphHkorU5oj/QuDyiNhKNdI/B/gKcGlErAB6wKYW80hSkVor/sy8F/jTPg+tbiuDJMkrdyWpOBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMBa/JBVmoOKPiMObDiJJasfyAZ93VUTcCXwAuD4z9zSYSZLUoIFG/Jl5EnAOsBq4KSLeFhFHNppMktSIxczx3wHsAH4CPAG4KCLe0kgqSVJjBp3j/zhwM/AQ4PTMPDUznw08s8lwkqT9b9AR/6XAkzLz74DpWdtP2v+RJElNGrT4TwTeXC9fHBFnAWTmVCOpJEmNGfSsnudk5gRAZr4gIm4Ezl/sziLibOA5wArgvcAW4AqqdxHbgQ2eMSRJzRp0xL8nIlYARMTBi3jdL0XEGqp3Dk+hOjvoCOACYGNmngyMAacu9utKkhZn0AK/BNgeEVcBt9Tri/V04GvA1cC1wKeACapRP8BmYO0+fF1J0iIMNNWTmR+IiGuAI4HbMvOufdjXw4HHAs8Cfhu4BliWmTMHi3cBh/V7Ya/X24fdLU4b+1iKrueD7mfser4ZU1NTI5MVRivvKGWF5vIOVPwRcSzwSuDQep3MfOki93U38M3M/DmQETFFNd0zYyWws98Lx8fHF7mr2XYM9Kyl7WMpup4Pup+x6/kWp9frjUxWGK28o5QVlpZ3cnJy3scGneq5Avgq8LFZfxbri8AzImIsIh4FPAj4bD33D7AO2LoPX1eStAiDntXz/cy8bCk7ysxPRcQpwJepfuFsAL4NXFofOO4Bm5ayD0nSwgYt/tvrc/e3UV/AlZk3LHZnmfmGPptXL/brSJL23aDFfwgQ9R+oyn/RxS9JGr5Bz+p5SUQ8HjiK6pTMOxpNJUlqzKBn9bwaeB7wUKoDvb8DvLq5WJKkpgx6Vs9pVBdX7czMi4Djm4skSWrSoMU/87yZi61+1kAWSVILBj24eyXwBeCxEXE98C/NRZIkNWnQg7vviYjPUn3yVmbmfzcbS5LUlEE/geuNwAuAceC59bokaQQNOtXzg/q/Y8Bx7MNtmSVJ3TDoVM/7Z69HxOZm4kiSmjboefyPn7X6m8BjmokjSWraoFM9s0f8U8DrG8giSWrBoFM9f9B0EElSOwad6vkvqg9KmaL+MBaqA73TmXlkQ9kkSQ0Y9Oycm4AXZeYxVB+I/kXgaKrTOyVJI2TQOf5jMvNmgMz8WkQ8JjO9bYMkjaBBi39nRPwt1adnnQR8p7lIkqQmDTrV80Lgx8AzqD7Z+mWNJZIkNWrQ4p8CfgTcBSTw640lkiQ1atDifz/VRVt/RHV2z4caSyRJatSgxX9UZr4RmMrMa4HDGswkSWrQoMW/PCIeDkxHxEpgT4OZJEkNGvSsnr8BbqS6T8+XgDMaSyRJatSgI/4jMjOAo4AnZOZnGswkSWrQoCP+VwIfycw7mwwjSWreoMV/SERsozqVcw9AZr6wsVSSpMbstfgjYmNmvhU4E/gt4H9bSSVJasxCI/6nAm/NzC0R8bnMfGoboSRJzVno4O7YPMuSpBG1UPFPz7MsSRpRC031TETETVSj/WNmLU9n5omNp5Mk7XcLFf/vtpJCktSavRZ/Zu73++5HxCOBSeBpwG7gCqpppO3Ahsz0dhCS1KBBr9zdLyLiYKo7ff603nQBsDEzT6aaQjq1zTySVKJWix94J3AJcEe9PgFsqZc3A2tbziNJxRn0yt0li4i/AO7MzE9HxNn15rHMnDlbaBfz3O651+s1nq+NfSxF1/NB9zN2Pd+MqampkckKo5V3lLJCc3lbK37gpVS3dV4LHEv1YS6PnPX4SmBnvxeOj48vYbc7BnrW0vaxFF3PB93P2PV8i9Pr9UYmK4xW3lHKCkvLOzk5Oe9jrU31ZOYpmbk6M9cAtwAvBjZHxJr6KeuArW3lkaRStTni7+d1wKURsQLoAZuGnEeSDnhDKf561D9j9TAySFKp2j6rR5I0ZBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMBa/JBXG4pekwiwfdgBJv7LqrOvqpR17fd7t569vPowOWI74JakwFr8kFcbil6TCWPySVJjWDu5GxMHA5cAq4BDgrcA3gCuAaWA7sCEz97SVSZJK1OaI/3Tg7sw8GVgHvAe4ANhYbxsDTm0xjyQVqc3i/wRw7qz13cAEsKVe3wysbTGPJBWptamezLwXICJWApuAjcA7M3O6fsou4LB+r+31eo3na2MfS9H1fND9jF3Ptxhd+rtMTU11Ks/ejFJWaC5vqxdwRcQRwNXAezPzyoh4x6yHVwI7+71ufHx8CXvd+4Uw+2cfS9H1fND9jF3Ptxij93fp9XqdyrM3o5QVlpZ3cnJy3sdam+qJiMOBG4AzM/PyevO2iFhTL68DtraVR5JK1eaI/xzgIcC5ETEz138GcHFErAB6VFNAkqQGtTnHfwZV0c+1uq0MkiQv4JKk4lj8klQYi1+SCmPxS1JhLH5JKozFL0mFsfglqTAWvyQVxuKXpMJY/JJUGItfkgpj8UtSYSx+SSqMxS9JhbH4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqjMUvSYWx+CWpMBa/JBXG4pekwlj8klQYi1+SCmPxS1JhLH5JKszyYQeQNFpWnXVdn607HrDl9vPXNx9G+8QRvyQVxuKXpMIMfaonIpYB7wWeCPwMeHlm/s9wU0nSgWvoxQ88Fzg0M58cEScA7wJOHXImSSOq/zGI2arjEcM8BrFwxsrmPz+ykf13YarnJODfADLzS8DvDzeOJB3Yxqanp4caICIuA67KzM31+neBIzNzN8Dk5ORwA0rSiJqYmBjrt70LUz0/BlbOWl82U/owf3BJ0r7pwlTPjcAzAeo5/q8NN44kHdi6MOK/GnhaRNwEjAEvGXIeSTqgDX2Of3+LiOOBt2fmmog4DrgW+Fb98Psy82PDS/dAc/I+ErgUeAhwEPDizLxtqAFnmZP1o8Bv1A+tAr6UmacNLdwcc7IeC1wC7AZupTpleM9QA87R59/tJVSnN98CnNGVvBFxMHA51f/zQ4C3At8ArgCmge3Ahi7k7Zc1M6+pH7sQyMy8ZHgJ72+e7+13gXcD91H9e3hxZv5gqfvqwlTPfhMRbwAuAw6tNx0HXJCZa+o/XSv9uXnfAXwkM08BNgJHDyvbXHOzZuZpmbkGeB6wE3jt8NLdX5/v65uAt2TmSVQ/UJ26l0CfvP8IvCYzTwbuAV44rGx9nA7cXWdbB7wHuADYWG8bozunYz8ga0Q8IiI2A88ZbrS++n1vLwL+qv5Z+yRw5v7Y0QFV/MBtwPNnrU8A6yPiCxHxgYhYOc/rhmVu3qcAj46IzwAvAv5jGKHmMTfrjDcD787M77WcZ2/mZt0GPDQixqhOJPjFUFLNb27eR2fmTfXyjVSnPHfFJ4BzZ63vpvo521KvbwbWth1qHv2y/hpwHvDhYQRaQL+8p2XmLfX6cmBqf+zogCr+zLyK+/9Qfxn463oEvYNq5NcZffKuAn6UmWup3uLtl9/u+0OfrNRTU39I9Ta/M/pk/RZwMdADDqdbv1D75d0REavr5WcDD2o/VX+ZeW9m7qoHUZuo3pmOZebMnPEu4LChBZylX9bM/HZm/uews/UzT97vAUTEicCrgQv3x74OqOLv4+rMnJxZBn5vmGEGcDdwTb18Ld2/mO1PgCsz875hB1nARcDJmXk08CGqq8O77CXA2RFxHfB/wF1DznM/EXEE8Hngw5l5JTB7Pn8l1dRfJ/TJ2mn98kbEn1Ed81mfmXfuj/0c6MX/6Yh4Ur38h8Dk3p7cAV+kPrUVOAX4+hCzDGIt1Vv7rvsh1fUiAHdQHTzvsvXASzNzPfAw4N+HnOeXIuJw4AbgzMy8vN68LSLW1MvrgK3DyDbXPFk7q1/eiDidaqS/JjMfeO/rfdSF0zmb9CqqAzo/B74PvHLIeRbyOuCyiHgV3Tuo10/Q70bs3fNy4KMRsRv4OfCKIedZyLeA6yPiJ8DnM/P6YQea5RyqX5znRsTMfPQZwMURsYJqOm3TsMLN0S/rusz86RAz7c3cvAcBTwC+A3wyIgC2ZOaSp6wPuNM5JUl7d6BP9UiS5rD4JakwFr8kFcbil6TCWPySVBiLX5IKY/FLUmEsfkkqzP8DS2Fik0wyp+oAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXgAAAECCAYAAAD0JMwBAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAEWBJREFUeJzt3X2QXXV9x/H3CgSqRupDobZVM6J+WepUxu2MylNSG7RIK9YW6+AzPnZiB1s6ghi1Wu0gg7RQa2EAG1AcRkGdKqYw1hKDKI7b0EJ7/VJJox1RhyrR+LDSkO0f52xys9kkZ5N77jn55f2aYTjn3HvP+ezd3U/O/s7DnZidnUWSVJ6HdR1AktQOC16SCmXBS1KhLHhJKpQFL0mFsuAlqVCHdh1A6puIOBt4I7AUOBzYCKzOzDuGnvM84KLMPL6blNLeWfDSkIj4K+AU4CWZ+c162XOBz0bEFHA/8HZgFfDtzoJKDThEI9Ui4mjgLcCZc+UOkJlfAP4MeATw/Pr/r+okpLQI7sFLOzwHGGTmd+Y/kJkfqScHwKcjYsU4g0n7woKXdpgAtt+7IyKWAuvr2UcCH8/MC7oIJu0Lh2ikHe4Ajo2IxwJk5pbMPL4+kPpR4FGdppMWyYKXapl5H3Ap8ImIeOLc8oh4EnAi8FBX2aR94RCNNCQz3x4RLwM+FhGPAI4EHgCuB/6u03DSIk14u2BJKpNDNJJUKAtekgplwUtSoSx4SSqUBS9JherVaZLT09Oe0iNJ+2Bqampi/rJeFTzA1NRU1xEYDAZMTk52HWMX5loccy2OuRanT7mmp6cXXO4QjSQVyoKXpEJZ8JJUKAtekgplwUtSoSx4SSqUBS9JhbLgJalQvbvQSRqFZeffVE9t3OPzNl14evthpI60VvARsQH4YT3738AVVB+HthW4JTPf3da2JUktFXxEHAGQmSuGlt0J/AHVLtVNEfHMzPzXNrYvSWpvD/4ZwMMj4pZ6G38BHJ6Z9wJExM3AbwMWvCS1pK2C/ylwMXAV8FRgLbB56PEtwJMXeuFgMGgpUnMzMzO9yDGfuUavi9x9fb/MtTh9zTWsrYK/B/hGZs4C90TED4HHDD2+lJ0Lf7s+3J2tT3eJG2auxdjzwdU5XeTu5/tlrsXqU65x303ybOADABHxK8DDgZ9ExDERMQE8H1jf0rYlSbS3B381sCYibgNmqQp/G3AdcAjVWTR3tLRtSRItFXxmPgictcBDz25je5KkXXklqyQVyoKXpEJZ8JJUKAtekgplwUtSoSx4SSqUBS9JhbLgJalQFrwkFcqCl6RCWfCSVCgLXpIKZcFLUqEseEkqlAUvSYWy4CWpUBa8JBXKgpekQlnwklQoC16SCmXBS1KhLHhJKpQFL0mFsuAlqVAWvCQVyoKXpEJZ8JJUKAtekgplwUtSoSx4SSqUBS9JhbLgJalQh3YdQAeeZefftMDSjbss2XTh6e2HkbRbrRV8RBwFTAOnAluBNcAscDewKjO3tbVtSVJLQzQRcRhwBfCzetElwOrMPBmYAM5oY7uSpB3aGoO/GLgcuK+enwLW1dNrgZUtbVeSVBv5EE1EvBq4PzNvjoi31YsnMnO2nt4CHLm71w8Gg1FHWrSZmZle5Jivr7l250DI2kXGvn4fzbU4fc01rI0x+LOB2YhYCRwPXAscNfT4UmDz7l48OTnZQqTFGQwGvcgxX39y7XpAdSHdZu1vxv58H3dmrsXpU67p6ekFl498iCYzT8nM5Zm5ArgTeCWwNiJW1E85DVg/6u1KknY2rtMkzwWujIglwAC4YUzblaSDVqsFX+/Fz1ne5rakNi187v+uPPdffeKVrJJUKAtekgplwUtSoSx4SSqUBS9JhbLgJalQFrwkFcr7wR8EPIdbOji5By9JhbLgJalQFrwkFcqCl6RCWfCSVCgLXpIKZcFLUqE8D14aoabXHMBGrztQ69yDl6RCWfCSVCgLXpIKZcFLUqEseEkqlAUvSYWy4CWpUJ4HL/Wc9/PXvnIPXpIKZcFLUqEseEkqVKOCj4ij2w4iSRqtpgdZb4yI+4Grgc9l5rYWM0mSRqDRHnxmngRcACwHbo+I90XEk1tNJknaL4sZg78P2Aj8FHg6cGlEvKeVVJKk/dZoiCYiPk5V6h8FXp6Z99XLvwa8s714Olh4rrc0ek3H4K8EvpyZP46Ixw8tP2mhJ0fEIfVrAngIeA0wAawBZoG7gVWO5UtSe5oO0ZwAvLueviwizgfIzJndPP/36sdPpNrDv6T+b3VmnkxV9mfsa2hJ0t41LfgXZua5AJl5JnWB705mfhp4Qz37JOB7wBSwrl62Fli56LSSpMaaDtFsi4glmflgRBxGg38YMnNrRFwD/D7wh8DvZuZs/fAW4MiFXjcYDBpGas/MzEwvcszXdq5Rr7uNrAdCxq623XR9p12zcQ+P7nhs7av6caLcwfr7OApNC/5y4O6IuAs4FrioyYsy81URcR5wB/ALQw8tBTYv9JrJycmGkdozGAx6kWO+fc+1p1/oHZqve9Tra2Od3axvMfr+tfTld6C838fRm56eXnB50/PgrwZOpCr25Zl5zZ6eHxGviIi31bM/BbYBX4uIFfWy04D1TbYtSdo3TU+TPJ5qTP2Iep7MPHsPL/kk8A8R8UXgMOAtwAC4MiKW1NM37E9wSdKeNR2iWQN8EPifJk/OzJ8AL1ngoeUNtydJ2k9NC/67mXlVq0kkSSPVtOA31ee+b6C6UInMvKW1VJKk/da04A+nuio16vlZwIKXpB5rVPCZ+ZqIeBpwDHAX1Y3HJEk91vQsmjdTXbD0GKoDrk8F3txeLEnS/mp6q4KXUt1aYHNmXgo8q71IkqRRaFrwc8+bu9XAz1vIIkkaoaYHWT8GfBF4UkR8Dvh0e5EkSaPQ9CDrByPin6k+9CMz89/bjSVJ2l+Nhmgi4p3AmcAk8KJ6XpLUY02HaL5X/38CeCaL+yxXSVIHmg7RXDE8HxFr24kjSRqVpufBP21o9vHAE9uJI0kalaZDNMN78DPAn7eQRZI0Qk2HaH6r7SCSpNFqOkTzb1QfszdD/aEfVAdcZzOzHx/cKEnaSdOzYW4HXpaZxwFnALdRfTZrPz6QUJK0i6Zj8Mdl5pcBMvOuiHhiZnq7AknqsaYFvzki/hL4KnAS8M32IkmSRqHpEM1ZwI+A3wE2Aq9tLZEkaSSa7sHPAA8AjwQS+EXgf9sKJenAsez8mxo9b9OFp7ecRPM13YO/guripudRnU1zbWuJJEkj0bTgj8nMdwIzmfkZ4MgWM0mSRqBpwR8aEY8DZiNiKbCtxUySpBFoOgb/duBLVPeh+QpwTmuJtJcxzY3bpxzTlLQnTffgn5CZARwDPD0zP99iJknSCDTdg38DcF1m3t9mGEnS6DQt+MMjYgPVKZLbADLzrNZSSZL22x4LPiJWZ+Z7gfOAXwW+PZZUkg5qux6H2rjg8zwOtWd724N/LvDezFwXEV/IzOeOI5Qkaf/t7SDrxG6mJUk9t7eCn93NtCSp5/Y2RDMVEbdT7b0fNzQ9m5kntJ5OkrTP9lbwv7HYFUbEYcCHgWXA4cB7gf8E1lD9FXA3sCozvRpWklq0x4LPzH257/vLge9n5isi4rHABuBOYHVm3hoRl1N9KtSn9mHdkqSGml7JuhifAN4xNL8VmALW1fNrgZUtbFeSNKTphU6NZeaPAeqbkt0ArAYuzsy5g7Rb2MPdKAeDwagjLdrMzEwvcuzNqDP2fX1trLPL73Pfv5a+r6+tdTZ1IPTEyAseICKeQDUE86HM/FhEXDT08FJg8+5eOznZ/ed4DwaDjnMsfFHHfM0z9n19bayzm/UtRt+/lrJ+Hkav+57YYXp6esHlIx+iiYijgVuA8zLzw/XiDRGxop4+DVg/6u1KknbWxh78BcCjgXdExNxY/DnAZRGxBBhQDd1IklrUxhj8OSx8v/jlo96WJGn32jiLRpLUAxa8JBXKgpekQlnwklQoC16SCmXBS1KhLHhJKpQFL0mFsuAlqVAWvCQVyoKXpEJZ8JJUKAtekgplwUtSoSx4SSqUBS9JhbLgJalQFrwkFcqCl6RCWfCSVCgLXpIKZcFLUqEseEkqlAUvSYWy4CWpUBa8JBXKgpekQlnwklQoC16SCmXBS1KhLHhJKpQFL0mFsuAlqVCHtrXiiHgW8P7MXBERTwHWALPA3cCqzNzW1rYlSS3twUfEW4GrgCPqRZcAqzPzZGACOKON7UqSdmhriOZe4MVD81PAunp6LbCype1KkmqtDNFk5o0RsWxo0URmztbTW4Ajd/fawWDQRqRFmZmZ6UWOvRl1xr6vr411dvl97vvX0vf1tbXOpg6EnmhtDH6e4fH2pcDm3T1xcnKy/TR7MRgMOs6xsdGzmmfs+/raWGc361uMvn8tZf08jF73PbHD9PT0gsvHdRbNhohYUU+fBqwf03Yl6aA1rj34c4ErI2IJMABuGNN2Jemg1VrBZ+Ym4Nn19D3A8ra2JUnalRc6SVKhLHhJKpQFL0mFGtdBVknqzLLzb2r0vE0Xnr7I9e35dM6m62uLe/CSVCgLXpIKZcFLUqEcg99PTcf2oPvxOEkHF/fgJalQFrwkFcqCl6RCWfCSVCgLXpIKZcFLUqEseEkqlAUvSYWy4CWpUBa8JBXKgpekQlnwklQoC16SCmXBS1KhLHhJKpQFL0mFsuAlqVAWvCQVyoKXpEL5mayS1JKmn9nc1uc1uwcvSYWy4CWpUBa8JBWqmDH4pmNdTW26cHKk65OkcRtbwUfEw4APAc8Afg68LjO/Ma7tS9LBZpxDNC8CjsjM5wDnAx8Y47Yl6aAzzoI/CfgngMz8CvCbY9y2JB10JmZnZ8eyoYi4CrgxM9fW898CnpyZW+eeMz09PZ4wklSYqampifnLxnmQ9UfA0qH5hw2XOywcUJK0b8Y5RPMl4AUAEfFs4K4xbluSDjrj3IP/FHBqRNwOTACvGeO2JemgM7Yx+ANFRBwFTAOnZubXu84zJyLeBrwQWAJ8KDOv7jgSEXEYcA2wDHgIeH3X71lEPAt4f2auiIinAGuAWeBuYFVmbutBruOBv6V6z34OvDIzv9d1rqFlZwF/Up/x1ol579dRwJXAo4FDqN6ve3uQ63jgcmArcA/Vqd+d/HztjleyDqkL6wrgZ11nGRYRK4ATgBOB5cATOg20wwuAQzPzBOA9wPu6DBMRbwWuAo6oF10CrM7Mk6n+ajyjJ7kupSrQFcAngfN6kou6tF5L9X51YoFcFwHXZeYpwGrg2J7kehfwnsw8CTgcaOeOYfvBgt/ZxVT/It/XdZB5nk91zOJTwGeAz3YbZ7t7gEPri9geBfxfx3nuBV48ND8FrKun1wIrx56oMj/XSzPzznr6UGBm/JGAebki4rHAhcBbOsozZ/77dSLwaxHxeeBlwK1dhGLXXBuAx0TEBNUJJF3//O/Cgq9FxKuB+zPz5q6zLOBxVNcNnAm8Cbiu/qHq2o+phme+TvUn9GVdhsnMG9n5l2wiM+fGILcAR44/1a65MvM7ABFxAvBm4K+7zhURhwBXA39K9V51ZoHv4zLggcxcCXyLjv7iWSDXf1H9zA+Ao+nuH57dsuB3OJvqIPCtwPHAtRHxy91G2u77wM2Z+WBmJtUe3y91nAmqMrg5M59GdQuKayLiiL28ZpyGx0OXApu7CjJfRPwR1V+Lp2fm/V3nofpr56nA3wPXA8dFxN90G2m77wP/WE9/hv5cJHkpcHJmHgtcSw+vzi/mZmP7qx7fA6Au+Tdl5ne7S7ST24BzIuIS4PHAI6h+6Lv2ADv2aH4AHEZ1EKwvNkTEisy8FTgN+JeO8wAQES8H3gisyMwfdJ0HIDO/Cvw6QEQsA67PzK6HaubcRnW85yPAKcB/dBtnux9QXd8D1bDuiR1mWZAFfwDIzM9GxCnAV6n+6lqVmQ91HAuqoYUPR8R6qrN7LsjMn3Scadi5wJURsYTqz+gbOs4zNxRyGdVQwycjAmBdZr6r02D9di5wVUT8MfBD4KyO88x5HXB9RGwFHgRe33GeXXiapCQVyjF4SSqUBS9JhbLgJalQFrwkFcqCl6RCWfCSVCgLXpIKZcFLUqH+H/bWCz0UvrU6AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for col in std_df_numeric_cols:\n",
    "    std_df[col].plot.hist(bins=30)\n",
    "    plt.title(col)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# for col in std_df.columns:\n",
    "#     sns.regplot(x=col, y='G3',data = std_df_numeric_cols)\n",
    "#     plt.title(col)\n",
    "#     plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "lab_end = LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_std_df = std_df_numeric_cols.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age  Medu  Fedu  traveltime  studytime  failures  famrel  freetime  goout  \\\n",
       "0   18     4     4           2          2         0       4         3      4   \n",
       "1   17     1     1           1          2         0       5         3      3   \n",
       "2   15     1     1           1          2         3       4         3      2   \n",
       "3   15     4     2           1          3         0       3         2      2   \n",
       "4   16     3     3           1          2         0       4         3      2   \n",
       "\n",
       "   Dalc  Walc  health  absences  G1  G2  G3  \n",
       "0     1     1       3         6   5   6   6  \n",
       "1     1     1       3         4   5   5   6  \n",
       "2     2     3       3        10   7   8  10  \n",
       "3     1     1       5         2  15  14  15  \n",
       "4     1     2       5         4   6  10  10  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_std_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "for col in std_df_string_cols:\n",
    "    new_std_df[col] = lab_end.fit_transform(std_df_string_cols[col])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>Medu</th>\n",
       "      <th>Fedu</th>\n",
       "      <th>traveltime</th>\n",
       "      <th>studytime</th>\n",
       "      <th>failures</th>\n",
       "      <th>famrel</th>\n",
       "      <th>freetime</th>\n",
       "      <th>goout</th>\n",
       "      <th>Dalc</th>\n",
       "      <th>Walc</th>\n",
       "      <th>health</th>\n",
       "      <th>absences</th>\n",
       "      <th>G1</th>\n",
       "      <th>G2</th>\n",
       "      <th>G3</th>\n",
       "      <th>school</th>\n",
       "      <th>sex</th>\n",
       "      <th>address</th>\n",
       "      <th>famsize</th>\n",
       "      <th>Pstatus</th>\n",
       "      <th>Mjob</th>\n",
       "      <th>Fjob</th>\n",
       "      <th>reason</th>\n",
       "      <th>guardian</th>\n",
       "      <th>schoolsup</th>\n",
       "      <th>famsup</th>\n",
       "      <th>paid</th>\n",
       "      <th>activities</th>\n",
       "      <th>nursery</th>\n",
       "      <th>higher</th>\n",
       "      <th>internet</th>\n",
       "      <th>romantic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age  Medu  Fedu  traveltime  studytime  failures  famrel  freetime  goout  \\\n",
       "0   18     4     4           2          2         0       4         3      4   \n",
       "1   17     1     1           1          2         0       5         3      3   \n",
       "2   15     1     1           1          2         3       4         3      2   \n",
       "3   15     4     2           1          3         0       3         2      2   \n",
       "4   16     3     3           1          2         0       4         3      2   \n",
       "\n",
       "   Dalc  Walc  health  absences  G1  G2  G3  school  sex  address  famsize  \\\n",
       "0     1     1       3         6   5   6   6       0    0        1        0   \n",
       "1     1     1       3         4   5   5   6       0    0        1        0   \n",
       "2     2     3       3        10   7   8  10       0    0        1        1   \n",
       "3     1     1       5         2  15  14  15       0    0        1        0   \n",
       "4     1     2       5         4   6  10  10       0    0        1        0   \n",
       "\n",
       "   Pstatus  Mjob  Fjob  reason  guardian  schoolsup  famsup  paid  activities  \\\n",
       "0        0     0     4       0         1          1       0     0           0   \n",
       "1        1     0     2       0         0          0       1     0           0   \n",
       "2        1     0     2       2         1          1       0     1           0   \n",
       "3        1     1     3       1         1          0       1     1           1   \n",
       "4        1     2     2       1         0          0       1     1           0   \n",
       "\n",
       "   nursery  higher  internet  romantic  \n",
       "0        1       1         0         0  \n",
       "1        0       1         1         0  \n",
       "2        1       1         1         0  \n",
       "3        1       1         1         1  \n",
       "4        1       1         0         0  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_std_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(393, 33)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_std_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import chi2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "#X = new_std_df.drop(['Suggested Job Role'], axis=1)\n",
    "X = new_std_df.drop(['G3'], axis=1)\n",
    "y = new_std_df['G3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "best_features = SelectKBest(score_func=chi2,k='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "fit = best_features.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column</th>\n",
       "      <th>sel_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>absences</td>\n",
       "      <td>605.003450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>G2</td>\n",
       "      <td>443.571805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>G1</td>\n",
       "      <td>311.735303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>failures</td>\n",
       "      <td>133.638379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>schoolsup</td>\n",
       "      <td>27.917403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Walc</td>\n",
       "      <td>26.454077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>reason</td>\n",
       "      <td>25.030340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>romantic</td>\n",
       "      <td>18.474562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Dalc</td>\n",
       "      <td>16.745865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>paid</td>\n",
       "      <td>15.038061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Mjob</td>\n",
       "      <td>14.138996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Medu</td>\n",
       "      <td>12.780872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>famsize</td>\n",
       "      <td>11.789539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Fedu</td>\n",
       "      <td>10.202900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>school</td>\n",
       "      <td>10.025561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>sex</td>\n",
       "      <td>9.525234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>goout</td>\n",
       "      <td>8.931815</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>health</td>\n",
       "      <td>7.626593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>activities</td>\n",
       "      <td>6.617565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>traveltime</td>\n",
       "      <td>6.469231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>address</td>\n",
       "      <td>5.756140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Fjob</td>\n",
       "      <td>4.754531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>studytime</td>\n",
       "      <td>4.340662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>guardian</td>\n",
       "      <td>4.250085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>famsup</td>\n",
       "      <td>4.051269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>freetime</td>\n",
       "      <td>3.825454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>nursery</td>\n",
       "      <td>3.194942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>internet</td>\n",
       "      <td>2.934759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>age</td>\n",
       "      <td>2.243046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>famrel</td>\n",
       "      <td>1.882236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Pstatus</td>\n",
       "      <td>1.687979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>higher</td>\n",
       "      <td>1.229384</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        column   sel_score\n",
       "12    absences  605.003450\n",
       "14          G2  443.571805\n",
       "13          G1  311.735303\n",
       "5     failures  133.638379\n",
       "24   schoolsup   27.917403\n",
       "10        Walc   26.454077\n",
       "22      reason   25.030340\n",
       "31    romantic   18.474562\n",
       "9         Dalc   16.745865\n",
       "26        paid   15.038061\n",
       "20        Mjob   14.138996\n",
       "1         Medu   12.780872\n",
       "18     famsize   11.789539\n",
       "2         Fedu   10.202900\n",
       "15      school   10.025561\n",
       "16         sex    9.525234\n",
       "8        goout    8.931815\n",
       "11      health    7.626593\n",
       "27  activities    6.617565\n",
       "3   traveltime    6.469231\n",
       "17     address    5.756140\n",
       "21        Fjob    4.754531\n",
       "4    studytime    4.340662\n",
       "23    guardian    4.250085\n",
       "25      famsup    4.051269\n",
       "7     freetime    3.825454\n",
       "28     nursery    3.194942\n",
       "30    internet    2.934759\n",
       "0          age    2.243046\n",
       "6       famrel    1.882236\n",
       "19     Pstatus    1.687979\n",
       "29      higher    1.229384"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feat_sel_dict = {'column':X.columns,'sel_score':fit.scores_}\n",
    "feat_sel_df = pd.DataFrame(feat_sel_dict)\n",
    "#feat_sel_df.head()\n",
    "feat_sel_df.nlargest(40,'sel_score')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = MinMaxScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = scaler.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(393,)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(393, 32)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.20, \n",
    "                                                                 random_state= 101,stratify=y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# decision tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "dtc = DecisionTreeClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,\n",
       "            max_features=None, max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, presort=False, random_state=None,\n",
       "            splitter='best')"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtc.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "dtc_pred = dtc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.379746835443038"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,dtc_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# support vector machine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.svm import SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "svc = SVC()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n",
       "  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',\n",
       "  max_iter=-1, probability=False, random_state=None, shrinking=True,\n",
       "  tol=0.001, verbose=False)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "svc_pred = svc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.16455696202531644"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,svc_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\user\\Anaconda\\lib\\site-packages\\sklearn\\cross_validation.py:41: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n",
      "C:\\Users\\user\\Anaconda\\lib\\site-packages\\sklearn\\grid_search.py:42: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.\n",
      "  DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.grid_search import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "param_list = {'C':[1,10,100,1000,10000],'kernel': [ 'rbf', 'linear','poly']}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "gsc = GridSearchCV(svc,param_grid=param_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "best=gsc.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "best.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "best.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "best.best_score_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# linear regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "linreg = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "linreg.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "linreg_pred = linreg.predict(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# random forest "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "rfc = RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
       "            max_depth=None, max_features='auto', max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,\n",
       "            oob_score=False, random_state=None, verbose=0,\n",
       "            warm_start=False)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "rfc_pred = rfc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3037974683544304"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,rfc_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [],
   "source": [
    "gbc = GradientBoostingClassifier(n_estimators=700,max_depth=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GradientBoostingClassifier(criterion='friedman_mse', init=None,\n",
       "              learning_rate=0.1, loss='deviance', max_depth=3,\n",
       "              max_features=None, max_leaf_nodes=None,\n",
       "              min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "              min_samples_leaf=1, min_samples_split=2,\n",
       "              min_weight_fraction_leaf=0.0, n_estimators=700,\n",
       "              presort='auto', random_state=None, subsample=1.0, verbose=0,\n",
       "              warm_start=False)"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gbc.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [],
   "source": [
    "gbc_predict = gbc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4936708860759494"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,gbc_predict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neural_network.multilayer_perceptron import MLPClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "mlp = MLPClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\user\\Anaconda\\lib\\site-packages\\sklearn\\neural_network\\multilayer_perceptron.py:564: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
      "  % self.max_iter, ConvergenceWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n",
       "       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n",
       "       hidden_layer_sizes=(100,), learning_rate='constant',\n",
       "       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n",
       "       nesterovs_momentum=True, power_t=0.5, random_state=None,\n",
       "       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n",
       "       verbose=False, warm_start=False)"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mlp.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "mlp_predict = mlp.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.27848101265822783"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,mlp_predict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# evaluation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score,confusion_matrix,classification_report"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# support vector  machine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy score for  decision tree\n",
      "2.825\n",
      "\n",
      "-------------------------------\n",
      "Accuracy score for  support vector classifier\n",
      "5.225\n",
      "\n",
      "-------------------------------\n",
      "Accuracy score for  random forest classifier\n",
      "2.85\n",
      "\n",
      "-------------------------------\n"
     ]
    }
   ],
   "source": [
    "test_list= [dtc_pred,svc_pred,rfc_pred]\n",
    "model_list =['decision tree','support vector classifier','random forest classifier']\n",
    "model_accuracy_list = []\n",
    "index =0\n",
    "for pred in test_list:\n",
    "    if index <=2:\n",
    "        print('Accuracy score for ',model_list[index])\n",
    "        print(accuracy_score(y_test,test_list[index])*100)\n",
    "        print('\\n-------------------------------')\n",
    "        model_accuracy_list.append(accuracy_score(y_test,test_list[index])*100)\n",
    "    index+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_accuracy_dict = {'MODEL':model_list,'Accuracy':model_accuracy_list}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MODEL</th>\n",
       "      <th>Accuracy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>decision tree</td>\n",
       "      <td>3.100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>support vector classifier</td>\n",
       "      <td>5.375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>random forest classifier</td>\n",
       "      <td>3.275</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       MODEL  Accuracy\n",
       "0              decision tree     3.100\n",
       "1  support vector classifier     5.375\n",
       "2   random forest classifier     3.275"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_accuracy_df = pd.DataFrame(model_accuracy_dict,index=[0,1,2],columns=['MODEL','Accuracy'])\n",
    "model_accuracy_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0xe5f4d30>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x='MODEL',y=\"Accuracy\",data=model_accuracy_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for  decision tree\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.03      0.03      0.03       110\n",
      "          1       0.04      0.04      0.04       108\n",
      "          2       0.03      0.03      0.03       116\n",
      "          3       0.04      0.03      0.04       117\n",
      "          4       0.02      0.02      0.02       113\n",
      "          5       0.02      0.02      0.02       113\n",
      "          6       0.02      0.03      0.02       119\n",
      "          7       0.04      0.04      0.04       116\n",
      "          8       0.04      0.04      0.04       114\n",
      "          9       0.01      0.01      0.01       118\n",
      "         10       0.03      0.04      0.03       109\n",
      "         11       0.06      0.05      0.05       109\n",
      "         12       0.02      0.02      0.02       112\n",
      "         13       0.05      0.06      0.06       118\n",
      "         14       0.03      0.03      0.03       108\n",
      "         15       0.04      0.03      0.03       124\n",
      "         16       0.03      0.04      0.03       222\n",
      "         17       0.01      0.01      0.01       126\n",
      "         18       0.03      0.03      0.03       119\n",
      "         19       0.04      0.05      0.04       106\n",
      "         20       0.04      0.03      0.03       120\n",
      "         21       0.04      0.04      0.04       113\n",
      "         22       0.04      0.04      0.04       117\n",
      "         23       0.03      0.03      0.03       118\n",
      "         24       0.03      0.04      0.03       114\n",
      "         25       0.04      0.03      0.04       115\n",
      "         26       0.05      0.05      0.05       116\n",
      "         27       0.06      0.05      0.06       110\n",
      "         28       0.03      0.03      0.03       112\n",
      "         29       0.01      0.02      0.02       111\n",
      "         30       0.02      0.02      0.02       112\n",
      "         31       0.01      0.01      0.01       113\n",
      "         32       0.04      0.03      0.04       118\n",
      "         33       0.01      0.01      0.01       114\n",
      "\n",
      "avg / total       0.03      0.03      0.03      4000\n",
      "\n",
      "---------------------------------------------------------\n",
      "classification report for  support vector classifier\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.11      0.01      0.02       110\n",
      "          1       0.00      0.00      0.00       108\n",
      "          2       0.00      0.00      0.00       116\n",
      "          3       0.00      0.00      0.00       117\n",
      "          4       0.14      0.01      0.02       113\n",
      "          5       0.00      0.00      0.00       113\n",
      "          6       0.00      0.00      0.00       119\n",
      "          7       0.00      0.00      0.00       116\n",
      "          8       0.00      0.00      0.00       114\n",
      "          9       0.10      0.02      0.03       118\n",
      "         10       0.00      0.00      0.00       109\n",
      "         11       0.00      0.00      0.00       109\n",
      "         12       0.00      0.00      0.00       112\n",
      "         13       0.00      0.00      0.00       118\n",
      "         14       0.00      0.00      0.00       108\n",
      "         15       0.10      0.02      0.04       124\n",
      "         16       0.05      0.91      0.10       222\n",
      "         17       0.00      0.00      0.00       126\n",
      "         18       0.00      0.00      0.00       119\n",
      "         19       0.00      0.00      0.00       106\n",
      "         20       0.12      0.01      0.02       120\n",
      "         21       0.00      0.00      0.00       113\n",
      "         22       0.00      0.00      0.00       117\n",
      "         23       0.06      0.01      0.01       118\n",
      "         24       0.00      0.00      0.00       114\n",
      "         25       0.00      0.00      0.00       115\n",
      "         26       0.03      0.01      0.01       116\n",
      "         27       0.00      0.00      0.00       110\n",
      "         28       0.00      0.00      0.00       112\n",
      "         29       0.00      0.00      0.00       111\n",
      "         30       0.00      0.00      0.00       112\n",
      "         31       0.14      0.01      0.02       113\n",
      "         32       0.11      0.01      0.02       118\n",
      "         33       0.00      0.00      0.00       114\n",
      "\n",
      "avg / total       0.03      0.05      0.01      4000\n",
      "\n",
      "---------------------------------------------------------\n",
      "classification report for  random forest classifier\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.02      0.06      0.03       110\n",
      "          1       0.03      0.08      0.05       108\n",
      "          2       0.03      0.09      0.05       116\n",
      "          3       0.02      0.03      0.02       117\n",
      "          4       0.03      0.05      0.04       113\n",
      "          5       0.03      0.04      0.04       113\n",
      "          6       0.01      0.02      0.02       119\n",
      "          7       0.06      0.07      0.06       116\n",
      "          8       0.03      0.03      0.03       114\n",
      "          9       0.05      0.05      0.05       118\n",
      "         10       0.02      0.02      0.02       109\n",
      "         11       0.02      0.02      0.02       109\n",
      "         12       0.03      0.03      0.03       112\n",
      "         13       0.03      0.03      0.03       118\n",
      "         14       0.04      0.03      0.03       108\n",
      "         15       0.04      0.04      0.04       124\n",
      "         16       0.07      0.09      0.08       222\n",
      "         17       0.03      0.02      0.03       126\n",
      "         18       0.08      0.07      0.07       119\n",
      "         19       0.02      0.01      0.01       106\n",
      "         20       0.01      0.01      0.01       120\n",
      "         21       0.03      0.02      0.02       113\n",
      "         22       0.04      0.02      0.02       117\n",
      "         23       0.04      0.03      0.03       118\n",
      "         24       0.03      0.02      0.02       114\n",
      "         25       0.04      0.03      0.03       115\n",
      "         26       0.01      0.01      0.01       116\n",
      "         27       0.04      0.02      0.02       110\n",
      "         28       0.02      0.01      0.01       112\n",
      "         29       0.03      0.02      0.02       111\n",
      "         30       0.00      0.00      0.00       112\n",
      "         31       0.02      0.01      0.01       113\n",
      "         32       0.02      0.01      0.01       118\n",
      "         33       0.00      0.00      0.00       114\n",
      "\n",
      "avg / total       0.03      0.03      0.03      4000\n",
      "\n",
      "---------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "test_list= [dtc_pred,svc_pred,rfc_pred]\n",
    "model_list =['decision tree','support vector classifier','random forest classifier']\n",
    "index =0\n",
    "for pred in test_list:\n",
    "    if index <= 3:\n",
    "        print('classification report for ',model_list[index])\n",
    "        print(classification_report(y_test,test_list[index]))\n",
    "        print('---------------------------------------------------------')\n",
    "    index +=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion matrix for  decision tree\n",
      "[[3 3 3 ... 1 3 4]\n",
      " [2 4 1 ... 4 3 1]\n",
      " [0 4 4 ... 4 6 5]\n",
      " ...\n",
      " [2 3 4 ... 1 1 5]\n",
      " [2 4 3 ... 2 4 4]\n",
      " [2 4 5 ... 2 2 1]]\n",
      "---------------------------------------------------------\n",
      "confusion matrix for  support vector classifier\n",
      "[[1 0 0 ... 2 0 0]\n",
      " [0 0 0 ... 0 0 0]\n",
      " [0 1 0 ... 0 0 0]\n",
      " ...\n",
      " [0 0 0 ... 1 0 0]\n",
      " [0 0 0 ... 0 1 0]\n",
      " [0 1 0 ... 0 1 0]]\n",
      "---------------------------------------------------------\n",
      "confusion matrix for  random forest classifier\n",
      "[[ 7  9  7 ...  3  0  6]\n",
      " [ 9  9 11 ...  0  5  2]\n",
      " [12  8 10 ...  0  2  2]\n",
      " ...\n",
      " [12  9 13 ...  1  0  0]\n",
      " [14  9  9 ...  1  1  1]\n",
      " [ 8  8  9 ...  2  0  0]]\n",
      "---------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "test_list= [dtc_pred,svc_pred,rfc_pred]\n",
    "model_list =['decision tree','support vector classifier','random forest classifier']\n",
    "index =0\n",
    "for pred in test_list:\n",
    "    if index <= 3:\n",
    "        print('confusion matrix for ',model_list[index])\n",
    "        print(confusion_matrix(y_test,test_list[index]))\n",
    "        print('---------------------------------------------------------')\n",
    "    index +=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is  14.0\n"
     ]
    }
   ],
   "source": [
    "avg = np.int16((svc_pred + rfc_pred) / 2)\n",
    "avg_acc = accuracy_score(y_test, avg)\n",
    "print(\"Accuracy is \", round(avg_acc * 100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is  43.0\n"
     ]
    }
   ],
   "source": [
    "avg = np.int16((dtc_pred + gbc_predict) / 2)\n",
    "avg_acc = accuracy_score(y_test, avg)\n",
    "print(\"Accuracy is \", round(avg_acc * 100))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
